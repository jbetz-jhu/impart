[{"path":[]},{"path":"https://jbetz-jhu.github.io/impart/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://jbetz-jhu.github.io/impart/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://jbetz-jhu.github.io/impart/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://jbetz-jhu.github.io/impart/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://jbetz-jhu.github.io/impart/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement codeofconduct@posit.co. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://jbetz-jhu.github.io/impart/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://jbetz-jhu.github.io/impart/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://jbetz-jhu.github.io/impart/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://jbetz-jhu.github.io/impart/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://jbetz-jhu.github.io/impart/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://jbetz-jhu.github.io/impart/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://jbetz-jhu.github.io/impart/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to impart","title":"Contributing to impart","text":"outlines propose change impart. detailed discussion contributing tidyverse packages, please see development contributing guide code review principles.","code":""},{"path":"https://jbetz-jhu.github.io/impart/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to impart","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://jbetz-jhu.github.io/impart/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to impart","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed). See guide create great issue advice.","code":""},{"path":"https://jbetz-jhu.github.io/impart/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to impart","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"jbetz-jhu/impart\", fork = TRUE). Install development dependencies devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html.","code":""},{"path":"https://jbetz-jhu.github.io/impart/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to impart","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://jbetz-jhu.github.io/impart/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to impart","text":"Please note impart project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://jbetz-jhu.github.io/impart/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://jbetz-jhu.github.io/impart/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://jbetz-jhu.github.io/impart/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://jbetz-jhu.github.io/impart/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://jbetz-jhu.github.io/impart/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://jbetz-jhu.github.io/impart/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://jbetz-jhu.github.io/impart/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://jbetz-jhu.github.io/impart/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://jbetz-jhu.github.io/impart/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://jbetz-jhu.github.io/impart/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://jbetz-jhu.github.io/impart/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://jbetz-jhu.github.io/impart/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://jbetz-jhu.github.io/impart/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://jbetz-jhu.github.io/impart/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://jbetz-jhu.github.io/impart/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://jbetz-jhu.github.io/impart/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://jbetz-jhu.github.io/impart/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://jbetz-jhu.github.io/impart/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://jbetz-jhu.github.io/impart/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://jbetz-jhu.github.io/impart/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://jbetz-jhu.github.io/impart/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://jbetz-jhu.github.io/impart/SUPPORT.html","id":null,"dir":"","previous_headings":"","what":"Getting help with impart","title":"Getting help with impart","text":"Thanks using impart! filing issue, places explore pieces put together make process smooth possible.","code":""},{"path":"https://jbetz-jhu.github.io/impart/SUPPORT.html","id":"make-a-reprex","dir":"","previous_headings":"","what":"Make a reprex","title":"Getting help with impart","text":"Start making minimal reproducible example using reprex package. haven’t heard used reprex , ’re treat! Seriously, reprex make R-question-asking endeavors easier (pretty incredible ROI five ten minutes ’ll take learn ’s ). additional reprex pointers, check Get help! section tidyverse site.","code":""},{"path":"https://jbetz-jhu.github.io/impart/SUPPORT.html","id":"where-to-ask","dir":"","previous_headings":"","what":"Where to ask?","title":"Getting help with impart","text":"Armed reprex, next step figure ask. ’s question: start community.rstudio.com, /StackOverflow. people answer questions. ’s bug: ’re right place, file issue. ’re sure: let community help figure ! problem bug feature request, can easily return report . opening new issue, sure search issues pull requests make sure bug hasn’t reported /already fixed development version. default, search pre-populated :issue :open. can edit qualifiers (e.g. :pr, :closed) needed. example, ’d simply remove :open search issues repo, open closed.","code":""},{"path":"https://jbetz-jhu.github.io/impart/SUPPORT.html","id":"what-happens-next","dir":"","previous_headings":"","what":"What happens next?","title":"Getting help with impart","text":"efficient possible, development tidyverse packages tends bursty, shouldn’t worry don’t get immediate response. Typically don’t look repo sufficient quantity issues accumulates, ’s burst intense activity focus efforts. makes development efficient avoids expensive context switching problems, cost taking longer get back . process makes good reprex particularly important might multiple months initial report start working . can’t reproduce bug, can’t fix !","code":""},{"path":"https://jbetz-jhu.github.io/impart/articles/analyses_continuous.html","id":"setting-up-a-monitored-design","dir":"Articles","previous_headings":"","what":"Setting Up a Monitored Design:","title":"Monitored Analyses for a Continuous Outcome","text":"design parameters vignette previous vignettes: data used example also : impart::example_1. Specifically, data reverted particular points study information thresholds met: example_1_ia_1: Data Interim Analysis 1 example_1_ia_2: Data Interim Analysis 2 example_1_final: Data Final Analysis","code":"# Universal Study Design Parameters minimum_difference <- 5 # Effect Size: Difference in Means of 5 or greater alpha <- 0.05 # Type I Error Rate power <- 0.9 # Statistical Power test_sides <- 2 # Direction of Alternatives  # Determine information required to achieve desired power at fixed error rate information_single_stage <-   impart::required_information_single_stage(     delta = minimum_difference,     alpha = alpha,     power = power   )  # Group Sequential Design Parameters information_rates <-   c(0.50, 0.75, 1.00) # Analyses at 50%, 75%, and 100% of the Total Information type_of_design <- \"asOF\" # O'Brien-Fleming Alpha Spending type_beta_spending <- \"bsOF\" # O'Brien-Fleming Beta Spending  # Set up group sequential testing procedure trial_design <-   rpact::getDesignGroupSequential(     alpha = alpha,     beta = 1 - power,     sided = 2,     informationRates = information_rates,     typeOfDesign = type_of_design,     typeBetaSpending = type_beta_spending,     bindingFutility = FALSE   )  # Inflate information level to account for multiple testing information_adaptive <-   impart::required_information_sequential(     information_single_stage = information_single_stage,     trial_design = trial_design   )  # Initialize the monitored design monitored_design <-   initialize_monitored_design(     trial_design = trial_design,     null_value = 0,     maximum_sample_size = 280,     information_target = information_adaptive,     orthogonalize = TRUE,     rng_seed_analysis = 54321   ) # Data for Interim Analysis 1 example_1_ia_1 <- impart::example_1_ia_1  head(example_1_ia_1) #>   .id        x_1        x_2        x_3        x_4 tx       .e .r_1     .t_1 #> 1   1  2.0742970  0.1971432 -0.8425884  0.2794844  0  2.24846    1 25.01538 #> 2   2  0.2165473 -0.7384296  0.1315016 -1.2419134  1 11.05565    0 55.05565 #> 3   3  0.8294726  0.4997821  1.6932555 -0.4063889  0 16.96591    0 60.96591 #> 4   4 -1.0206893 -0.2189937 -1.7719120  0.1936013  1 25.13396    1 59.84544 #> 5   5 -0.0417332  0.9282685  0.8078133  0.9317145  0 50.07301    1 75.94952 #> 6   6  0.7275778  1.1756811  0.0226265 -0.2556343  1 50.93935    1 80.29181 #>        y_1 .r_2      .t_2       y_2 .r_3      .t_3      y_3 .r_4     .t_4 #> 1 1.591873    1  56.62636 -4.535711    1  98.51499 13.98543    1 133.0050 #> 2       NA    0  85.05565        NA    0 115.05565       NA    0 145.0556 #> 3       NA    0  90.96591        NA    0 120.96591       NA    0 150.9659 #> 4 1.212620    1  81.58577 -4.533776    1 127.78659 11.17615    1 154.3419 #> 5 8.655326    1 111.21967  6.970372    1 143.00338 17.62329    1 181.4162 #> 6 6.902055    1 114.96781 17.381316    1 151.34249 -2.42570    1 177.3846 #>         y_4 #> 1 -1.320242 #> 2        NA #> 3        NA #> 4 -6.629545 #> 5  9.126240 #> 6  3.549977"},{"path":"https://jbetz-jhu.github.io/impart/articles/analyses_continuous.html","id":"interim-analysis-1","dir":"Articles","previous_headings":"","what":"Interim Analysis 1","title":"Monitored Analyses for a Continuous Outcome","text":"conducting first interim analysis, information level pre-specified threshold: smoothed trajectory can used mitigate random variation information level. Analysts need specify estimation_function, function used compute estimate, estimation_arguments, list arguments aside data needed computation. Estimators may variance correction factor can computed analysis parameters: can specified using correction_function argument. standardization estimator computed standardization(), corresponding small-sample variance correction standardization_correction(): adjusts variance according sample size arm number parameters regression model. trajectory computed, can smoothed plotted:  information level confirmed threshold, conducting analysis similar computing information:","code":"# Obtain time of last event last_event <-   example_1_ia_1[, c(\".e\", \".t_1\", \".t_2\", \".t_3\", \".t_4\")] |>   unlist() |>   max(na.rm = TRUE) |>   ceiling()  example_1_ia_1_prepared <-   prepare_monitored_study_data(     data = example_1_ia_1,     study_time = last_event,     id_variable = \".id\",     covariates_variables = c(\"x_1\", \"x_2\", \"x_3\", \"x_4\"),     enrollment_time_variable = \".e\",     treatment_variable = \"tx\",     outcome_variables = c(\"y_1\", \"y_2\", \"y_3\", \"y_4\"),     outcome_time_variables = c(\".t_1\", \".t_2\", \".t_3\", \".t_4\"),      # Observe missingness 1 week after target study visit     observe_missing_times = c(30, 60, 90, 120) + 7   )  data_ia_1_trajectory <-    information_trajectory(     prepared_data = example_1_ia_1_prepared,     monitored_design = monitored_design,     estimation_function = standardization,     estimation_arguments =       list(         estimand = \"difference\",         y0_formula = y_4 ~ x_1 + x_2 + x_3 + x_4,         y1_formula = y_4 ~ x_1 + x_2 + x_3 + x_4,         family = gaussian,         treatment_column = \"tx\",         outcome_indicator_column = \".r_4\"       ),     correction_function = standardization_correction,     orthogonalize = TRUE,     n_min = 50,     n_increment = 3,     rng_seed = 23456,     control = monitored_analysis_control()   )  data_ia_1_trajectory #>       times randomization y_1 y_2 y_3 y_4 information information_lag_1 #> 1  551.8682            90  69  57  53  50   0.1380683                NA #> 2  595.6751            96  77  63  58  53   0.1425721         0.1380683 #> 3  630.7461           100  79  70  64  56   0.1482429         0.1425721 #> 4  634.3194           100  79  70  64  59   0.1711911         0.1482429 #> 5  658.6659           109  82  72  69  62   0.1696971         0.1711911 #> 6  662.6718           110  82  72  69  65   0.1665782         0.1696971 #> 7  701.1256           117  96  80  71  68   0.1805331         0.1665782 #> 8  717.5104           119  96  82  73  71   0.2098995         0.1805331 #> 9  753.7782           126 101  91  83  74   0.2179450         0.2098995 #> 10 758.3298           128 101  91  85  77   0.2021433         0.2179450 #> 11 778.4102           131 105  94  88  80   0.2070840         0.2021433 #> 12 781.6646           131 106  94  89  83   0.2181654         0.2070840 #>    information_change information_pct_change information_fraction #> 1                  NA                     NA            0.3028952 #> 2         0.004503855              3.1590008            0.3127758 #> 3         0.005670759              3.8253158            0.3252163 #> 4         0.022948176             13.4050071            0.3755602 #> 5        -0.001493985             -0.8803831            0.3722827 #> 6        -0.003118900             -1.8723338            0.3654404 #> 7         0.013954871              7.7298147            0.3960547 #> 8         0.029366413             13.9907033            0.4604790 #> 9         0.008045561              3.6915549            0.4781294 #> 10       -0.015801736             -7.8170963            0.4434634 #> 11        0.004940738              2.3858613            0.4543024 #> 12        0.011081351              5.0793349            0.4786128 plot(   information ~ y_4,   data = data_ia_1_trajectory )  abline(   lm(     formula = information ~ y_4,     data = data_ia_1_trajectory   ),   lty = 1 )  # Requires `deming` package abline(   deming::theilsen(     formula = information ~ y_4,     data = data_ia_1_trajectory   ),   lty = 3 )  abline(   h = monitored_design$original_design$information_thresholds,   lty = 2 ) interim_analysis_1 <-   monitored_analysis(     data = example_1_ia_1,     monitored_design = monitored_design,     estimation_function = standardization,     estimation_arguments =        list(         estimand = \"difference\",         y0_formula = y_4 ~ x_1 + x_2 + x_3 + x_4,         y1_formula = y_4 ~ x_1 + x_2 + x_3 + x_4,         family = gaussian,         treatment_column = \"tx\",         outcome_indicator_column = \".r_4\"       ),     correction_function = standardization_correction   )  interim_analysis_1$interim_analysis_1$decision #> [1] \"Continue\" interim_analysis_1$interim_analysis_1$decision_data #>   test_statistic efficacy  futility #> 1       2.044012 2.930993 0.4236436 #> 2             NA 2.361025 1.2803287 #> 3             NA 2.014278        NA interim_analysis_1$interim_analysis_1$information_fraction_orthogonal #>           estimates #> estimates 0.5095383"},{"path":"https://jbetz-jhu.github.io/impart/articles/analyses_continuous.html","id":"interim-analysis-2","dir":"Articles","previous_headings":"","what":"Interim Analysis 2","title":"Monitored Analyses for a Continuous Outcome","text":"subsequent analyses identical syntax: new dataset provided, result previous analysis passed using monitored_design argument.","code":"example_1_ia_2 <- impart::example_1_ia_2  interim_analysis_2 <-   monitored_analysis(     data = example_1_ia_2,     monitored_design = interim_analysis_1,     estimation_function = standardization,     estimation_arguments =        list(         estimand = \"difference\",         y0_formula = y_4 ~ x_1 + x_2 + x_3 + x_4,         y1_formula = y_4 ~ x_1 + x_2 + x_3 + x_4,         family = gaussian,         treatment_column = \"tx\",         outcome_indicator_column = \".r_4\"       ),     correction_function = standardization_correction   )  interim_analysis_2$interim_analysis_2$decision #> [1] \"Continue\" interim_analysis_2$interim_analysis_2$decision_data #>   test_statistic efficacy  futility #> 1       2.044012 2.930993 0.4311741 #> 2       2.190967 2.281878 1.4392127 #> 3             NA 2.025798        NA interim_analysis_2$interim_analysis_2$information_fraction_orthogonal #> [1] 0.5095383 0.7921346"},{"path":"https://jbetz-jhu.github.io/impart/articles/analyses_continuous.html","id":"final-analysis","dir":"Articles","previous_headings":"","what":"Final Analysis","title":"Monitored Analyses for a Continuous Outcome","text":"syntax identical final analysis:","code":"example_1_final <- impart::example_1_final  final_analysis <-   monitored_analysis(     data = example_1_final,     monitored_design = interim_analysis_2,     estimation_function = standardization,     estimation_arguments =        list(         estimand = \"difference\",         y0_formula = y_4 ~ x_1 + x_2 + x_3 + x_4,         y1_formula = y_4 ~ x_1 + x_2 + x_3 + x_4,         family = gaussian,         treatment_column = \"tx\",         outcome_indicator_column = \".r_4\"       ),     correction_function = standardization_correction   )  final_analysis$final_analysis$decision #> [1] \"Efficacy: Upper\" final_analysis$final_analysis$decision_data #>   test_statistic efficacy futility #> 1       2.044012 2.930993 0.271853 #> 2       2.190967 2.281878 1.199716 #> 3       2.199126 2.048468       NA final_analysis$final_analysis$information_fraction_orthogonal #> [1] 0.5095383 0.7921346 1.0956921"},{"path":"https://jbetz-jhu.github.io/impart/articles/analyses_group_sequential.html","id":"planning-the-study","dir":"Articles","previous_headings":"","what":"Planning The Study","title":"Covariate Adjustment in Group Sequential Designs","text":"Planning information-monitored study similar many respects planning study fixed sample size. Investigators must decide target statistical inference, also known estimand: continuous outcome, difference means ratio means may interest. estimand chosen, decisions must made constitutes meaningful effect size scale estimand (e.g. difference means 5 ratio means 1.25). Finally, characteristics testing procedure must specified, including desired Type Error Rate, statistical power, direction alternatives interest:","code":"# Universal Study Design Parameters minimum_difference <- 5 # Effect Size: Difference in Means of 5 or greater alpha <- 0.05 # Type I Error Rate power <- 0.9 # Statistical Power test_sides <- 2 # Direction of Alternatives"},{"path":"https://jbetz-jhu.github.io/impart/articles/analyses_group_sequential.html","id":"sample-size-calculations-fixed-sample-size","dir":"Articles","previous_headings":"Planning The Study","what":"Sample Size Calculations: Fixed Sample Size","title":"Covariate Adjustment in Group Sequential Designs","text":"standard deviation population assumed 10, fixed sample size required identify difference means 5 90% power 5% Familywise Type Error 2-sided test : Note number observed outcomes: sample size must increased account missing data: Accounting 20% missing outcomes, sample size 215 needed obtain 172 primary outcomes.","code":"# Compute Fixed Sample Size Requirement fixed_n_sd_10 <-   pwr::pwr.t.test(     d = minimum_difference/10,     sig.level = alpha,     power = power   )  fixed_n_sd_10 #>  #>      Two-sample t test power calculation  #>  #>               n = 85.03128 #>               d = 0.5 #>       sig.level = 0.05 #>           power = 0.9 #>     alternative = two.sided #>  #> NOTE: n is number in *each* group pr_missing <- 0.2 # 20% missing outcomes  fixed_n_total <- 2*ceiling(fixed_n_sd_10$n)/(1 - pr_missing)"},{"path":"https://jbetz-jhu.github.io/impart/articles/analyses_group_sequential.html","id":"adjusting-information-for-multiple-analyses","dir":"Articles","previous_headings":"Planning The Study","what":"Adjusting Information for Multiple Analyses","title":"Covariate Adjustment in Group Sequential Designs","text":"Rather waiting 215 participants complete study, interim analyses may useful evaluate efficacy intervention, perhaps whether trial stopped futility using group sequential design: getDesignGroupSequential function rpact library can used specify appropriate study design. example, two-sided test comparing H0:μT−μC=δ0H_{0}: \\mu_{T} - \\mu_{C} = \\delta_{0} vs. HA:μT−μC≠δ0H_{}: \\mu_{T} - \\mu_{C} \\neq \\delta_{0} sequential analyses group sequential design, final sample size must adjusted. sample size inflation factor can obtained used obtain final sample size group sequential design: Interim analyses require 8% increase overall sample size, allow two pre-planned analyses efficacy. Enrollment continue 234 participants recruited: first interim analysis occur 117 participants primary outcome measured: trial stopped, second interim analysis occur 176 participants assessed primary outcome. trial stopped second interim analysis, final analysis occur 234 participants reach end study.","code":"# Group Sequential Design Parameters information_rates <-   c(0.50, 0.75, 1.00) # Analyses at 50%, 75%, and 100% of the Total Sample Size type_of_design <- \"asOF\" # O'Brien-Fleming Alpha Spending type_beta_spending <- \"bsOF\" # O'Brien-Fleming Beta Spending # Set up group sequential testing procedure trial_design <-   rpact::getDesignGroupSequential(     alpha = alpha,     beta = 1 - power,     sided = 2,     informationRates = information_rates,     typeOfDesign = type_of_design,     typeBetaSpending = type_beta_spending,     bindingFutility = FALSE   ) # Obtain inflation factor to preserve Type I Error: adjust fixed sample size inflation_factor <-   rpact::getDesignCharacteristics(trial_design)$inflationFactor  group_sequential_n_total <- ceiling(fixed_n_total*inflation_factor) group_sequential_n_total #> [1] 234  # Determine sample sizes when analyses will take place group_sequential_n_analyses <-   ceiling(information_rates*group_sequential_n_total)  group_sequential_n_analyses #> [1] 117 176 234"},{"path":"https://jbetz-jhu.github.io/impart/articles/analyses_group_sequential.html","id":"performing-interim-analysis-1","dir":"Articles","previous_headings":"Planning The Study","what":"Performing Interim Analysis 1","title":"Covariate Adjustment in Group Sequential Designs","text":"117 participants final outcomes obtained, first interim analysis can proceed:","code":""},{"path":"https://jbetz-jhu.github.io/impart/articles/design_binary.html","id":"planning-the-study","dir":"Articles","previous_headings":"","what":"Planning The Study","title":"Designing Information Monitored Trials for Binary Outcomes","text":"Planning information-monitored study similar many respects planning study fixed sample size. Investigators must decide target statistical inference, also known estimand: binary outcome, risk difference usually interest, although investigators may also interested risk ratio (relative risk), odds ratio. estimand chosen, decisions must made constitutes meaningful effect size scale estimand (e.g. 10% absolute reduction risk relative risk 0.75). Finally, characteristics testing procedure must specified, including desired Type Error Rate, statistical power, direction alternatives interest: amount data must collected depends amount information accruing data, information depending patterns associations among variables, variability outcomes interest, degree missingness. information always available studies planned practice. Fixed sample size designs require investigators make assumptions factors affecting precision: assumptions incorrect, studies can - -powered. Rather planning data collection pre-specified sample size reached, information-monitored study continues data collection data collected provide enough precision identify meaningful difference appropriate power control Type Error.","code":"# Universal Study Design Parameters minimum_difference <- 0.15 # Effect Size: An absolute risk difference of  alpha <- 0.05 # Type I Error Rate power <- 0.9 # Statistical Power test_sides <- 2 # Direction of Alternatives"},{"path":"https://jbetz-jhu.github.io/impart/articles/design_binary.html","id":"determining-the-target-information-level","dir":"Articles","previous_headings":"Planning The Study","what":"Determining the Target Information Level","title":"Designing Information Monitored Trials for Binary Outcomes","text":"information precision required achieve power (1−β)(1 - \\beta) identify treatment effect δ\\delta ss-sided test type error rate α\\alpha final analysis given : ℐF=(Zα/s+Zβδ)2≈1(SE(δ̂))2=1Var(δ̂)\\mathcal{}_{F} = \\left(\\frac{Z_{\\alpha/s} + Z_{\\beta}}{\\delta}\\right)^2 \\approx \\frac{1}{\\left(SE(\\hat{\\delta})\\right)^2} = \\frac{1}{Var(\\hat{\\delta})} example, detecting risk difference difference 0.15 90% power Type Error rate 0.05 using 2-sided test requires information level 466.9965805. Investigators can collect data precision (reciprocal square standard error) reaches level, analysis appropriate power Type error control.","code":"# Determine information required to achieve desired power at fixed error rate information_single_stage <-   impart::required_information_single_stage(     delta = minimum_difference,     alpha = alpha,     power = power   )  information_single_stage #> [1] 466.9966"},{"path":"https://jbetz-jhu.github.io/impart/articles/design_binary.html","id":"translating-information-into-sample-size","dir":"Articles","previous_headings":"Planning The Study","what":"Translating Information into Sample Size","title":"Designing Information Monitored Trials for Binary Outcomes","text":"Translating information levels sample size requires making assumption nuisance parameters, probability outcomes control arm. information_to_n_binary_1_to_1 function takes information level values nuisance parameters, gives approximate sample size. Note calculation takes account information contained observed outcomes: outcomes missing, analysis makes use information baseline covariates intermediate outcomes, can change sample size target information level reached. Note specific assumptions outcome probability control arm met, sample size requirements determined using calculation fixed sample size design (pwr::pwr.2p.test) calculation information-monitored design (information_to_n_binary_1_to_1) similar. slight differences due differences approximation (normal approximation versus arcsine transformation). advantage information-adaptive design sample size adapts information accruing data: rather making assumptions outcome probability control arm, result - -powered trial, data collection proceeds target information level met, ensures adequate power Type Error control.","code":"# Assume control probability = 0.25 approximate_n_p0_0.25 <-   impart::information_to_n_binary_1_to_1(     information = information_single_stage,     pi_0 = 0.25,     delta = minimum_difference,     round_up = TRUE   ) approximate_n_p0_0.25 #>   n_per_arm n_total #> 1       200     400  # Compute Power: Fixed Sample Size pwr::pwr.2p.test(   h = pwr::ES.h(p1 = 0.25 + minimum_difference, p2 = 0.25),   sig.level = alpha,   power = power ) #>  #>      Difference of proportion power calculation for binomial distribution (arcsine transformation)  #>  #>               h = 0.3222409 #>               n = 202.3787 #>       sig.level = 0.05 #>           power = 0.9 #>     alternative = two.sided #>  #> NOTE: same sample sizes  # Assume control probability = 0.42 approximate_n_p0_0.42 <-   impart::information_to_n_binary_1_to_1(     information = information_single_stage,     pi_0 = 0.42,     delta = minimum_difference,     round_up = TRUE   ) approximate_n_p0_0.42 #>   n_per_arm n_total #> 1       229     458  # Compute Power: Fixed Sample Size pwr::pwr.2p.test(   h = pwr::ES.h(p1 = 0.42 + minimum_difference, p2 = 0.42),   sig.level = alpha,   power = power ) #>  #>      Difference of proportion power calculation for binomial distribution (arcsine transformation)  #>  #>               h = 0.3011521 #>               n = 231.7151 #>       sig.level = 0.05 #>           power = 0.9 #>     alternative = two.sided #>  #> NOTE: same sample sizes"},{"path":"https://jbetz-jhu.github.io/impart/articles/design_binary.html","id":"sequential-analyses-in-studies","dir":"Articles","previous_headings":"Planning The Study","what":"Sequential Analyses in Studies","title":"Designing Information Monitored Trials for Binary Outcomes","text":"true effect interest greater minimum meaningful effect δ\\delta, study may still overpowered. Conversely, true effect small, indicates benefits participating study commensurate risks, may futile continue data collection. cases, interim analyses data can used guide ethical, cost-effective data collection. Group-Sequential Designs allow investigators control Type Error rates performing pre-specified interim assessments differences groups. Studies can also stopped early futility accruing data suggest treatment ineffective harmful. number timing analyses must pre-specified, well rules stopping efficacy futility. stopping rules specified using ‘spending functions:’ alpha spending functions define efficacy stopping rules, beta spending functions define futility stopping rules. information group sequential designs, see documentation RPACT package. example utilize O’Brien-Fleming stopping rules efficacy futility. contrast group sequential design, performs analyses pre-specified fractions final sample size, information-monitored study performs analyses data collected provide enough precision identify treatment effect appropriate power Type Error. Analyses conducted precision reaches pre-specified fractions level precision. getDesignGroupSequential function rpact library can used specify appropriate study design. example, two-sided test comparing H0:μT−μC=δ0H_{0}: \\mu_{T} - \\mu_{C} = \\delta_{0} vs. HA:μT−μC≠δ0H_{}: \\mu_{T} - \\mu_{C} \\neq \\delta_{0} one-sided test using RPACT, default boundaries assume users testing H0:μT−μC<δ0H_{0}: \\mu_{T} - \\mu_{C} < \\delta_{0} vs. HA:μT−μC≥δ0H_{}: \\mu_{T} - \\mu_{C} \\ge \\delta_{0}:  Users must must manually correct resulting design boundaries test H0:μT−μC>δ0H_{0}: \\mu_{T} - \\mu_{C} > \\delta_{0} vs. HA:μT−μC≤δ0H_{}: \\mu_{T} - \\mu_{C} \\le \\delta_{0}. correction made, correct_one_sided_gsd() called result, corrects futility efficacy boundaries:  issue resolved, users can specify direction using directionUpper argument RPACT functions: directionUpper = TRUE tests H0:μT−μC<δ0H_{0}: \\mu_{T} - \\mu_{C} < \\delta_{0} vs. HA:μT−μC≥δ0H_{}: \\mu_{T} - \\mu_{C} \\ge \\delta_{0} directionUpper = FALSE tests H0:μT−μC>δ0H_{0}: \\mu_{T} - \\mu_{C} > \\delta_{0} vs. HA:μT−μC≤δ0H_{}: \\mu_{T} - \\mu_{C} \\le \\delta_{0}","code":"# Group Sequential Design Parameters information_rates <-   c(0.50, 0.75, 1.00) # Analyses at 50%, 75%, and 100% of the Total Information type_of_design <- \"asOF\" # O'Brien-Fleming Alpha Spending type_beta_spending <- \"bsOF\" # O'Brien-Fleming Beta Spending # Set up group sequential testing procedure trial_design <-   rpact::getDesignGroupSequential(     alpha = alpha,     beta = 1 - power,     sided = 2,     informationRates = information_rates,     typeOfDesign = type_of_design,     typeBetaSpending = type_beta_spending,     bindingFutility = FALSE   ) # One sided test: Higher values = Better trial_design_one_sided_upper <-   rpact::getDesignGroupSequential(     alpha = alpha,     beta = 1 - power,     sided = 1,     informationRates = information_rates,     typeOfDesign = type_of_design,     typeBetaSpending = type_beta_spending,     bindingFutility = FALSE   )  plot(   trial_design_one_sided_upper,   main = \"One-Sided: Higher Z = Superior\" ) trial_design_one_sided_lower <-   correct_one_sided_gsd(     trial_design = trial_design_one_sided_upper,     higher_better = FALSE   )  plot(   trial_design_one_sided_lower,   main = \"Corrected One-Sided: Lower Z = Superior\" ) # One sided test: Higher values = Better trial_design_one_sided_higher <-   rpact::getDesignGroupSequential(     alpha = alpha,     beta = 1 - power,     sided = 1,     informationRates = information_rates,     typeOfDesign = type_of_design,     typeBetaSpending = type_beta_spending,     bindingFutility = FALSE,     directionUpper = FALSE   )  # One sided test: Lower values = Better trial_design_one_sided_lower <-   rpact::getDesignGroupSequential(     alpha = alpha,     beta = 1 - power,     sided = 1,     informationRates = information_rates,     typeOfDesign = type_of_design,     typeBetaSpending = type_beta_spending,     directionUpper = TRUE   )"},{"path":"https://jbetz-jhu.github.io/impart/articles/design_binary.html","id":"adjusting-information-for-multiple-analyses","dir":"Articles","previous_headings":"Planning The Study","what":"Adjusting Information for Multiple Analyses","title":"Designing Information Monitored Trials for Binary Outcomes","text":"sequential analyses information-monitored design, target level information must adjusted: information required specified design 506.4762081, scaled inflation factor mentioned summary design (1.0845394). can retrieved using rpact::getDesignCharacteristics(trial_design).","code":"# Inflate information level to account for multiple testing information_adaptive <-   impart::required_information_sequential(     information_single_stage = information_single_stage,     trial_design = trial_design   ) information_adaptive #> [1] 506.4762"},{"path":"https://jbetz-jhu.github.io/impart/articles/design_binary.html","id":"including-covariate-information","dir":"Articles","previous_headings":"Planning The Study","what":"Including Covariate Information","title":"Designing Information Monitored Trials for Binary Outcomes","text":"Appropriately including information covariates potential increase precision analyses, meaning target information levels can reached lower sample sizes, resulting studies shorter duration. increase precision covariate adjustment never known precisely planning study. Instead relying assumption gain precision covariates, investigators can use information monitoring adapt data collection accruing information covariates outcomes.","code":"# Information Only From Final Outcomes impart::information_to_n_binary_1_to_1(   information = information_rates*information_adaptive,   pi_0 = 0.25,   pi_1 = 0.25 + minimum_difference,   round_up = FALSE ) #>   information pi_0 pi_1 n_per_arm  n_total #> 1    253.2381 0.25  0.4  108.2593 216.5186 #> 2    379.8572 0.25  0.4  162.3889 324.7779 #> 3    506.4762 0.25  0.4  216.5186 433.0372 # 10% Relative Efficiency Increase from Covariates relative_efficiency <- 1.1 # Information From Final Outcomes + Covariates impart::information_to_n_binary_1_to_1(   information = information_rates*information_adaptive/relative_efficiency,   pi_0 = 0.25,   pi_1 = 0.25 + minimum_difference,   round_up = TRUE ) #>   information pi_0 pi_1 n_per_arm n_total #> 1    230.2165 0.25  0.4        99     198 #> 2    345.3247 0.25  0.4       148     296 #> 3    460.4329 0.25  0.4       197     394 # 20% Relative Efficiency Increase from Covariates relative_efficiency <- 1.2 # Information From Final Outcomes + Covariates impart::information_to_n_binary_1_to_1(   information = information_rates*information_adaptive/relative_efficiency,   pi_0 = 0.25,   pi_1 = 0.25 + minimum_difference,   round_up = TRUE ) #>   information pi_0 pi_1 n_per_arm n_total #> 1    211.0318 0.25  0.4        91     182 #> 2    316.5476 0.25  0.4       136     272 #> 3    422.0635 0.25  0.4       181     362"},{"path":"https://jbetz-jhu.github.io/impart/articles/design_binary.html","id":"encapsulating-study-design","dir":"Articles","previous_headings":"Planning The Study","what":"Encapsulating Study Design","title":"Designing Information Monitored Trials for Binary Outcomes","text":"monitored_design object encapsulates information information monitored study fixed outset, including number analyses, information fractions analyses conducted, target level information, null value estimand interest, maximum feasible sample size, pseudorandom number generator seed used analyses.","code":"# Initialize the monitored design monitored_design <-   initialize_monitored_design(     trial_design = trial_design,     null_value = 0,     maximum_sample_size = 600,     information_target = information_adaptive,     orthogonalize = TRUE,     rng_seed_analysis = 54321   )  monitored_design #> $original_design #> $original_design$trial_design #>  #> $original_design$maximum_sample_size #> [1] 600 #>  #> $original_design$null_value #> [1] 0 #>  #> $original_design$information_target #> [1] 506.4762 #>  #> $original_design$orthogonalize #> [1] TRUE #>  #> $original_design$rng_seed_analysis #> [1] 54321 #>  #> $original_design$information_fractions #> [1] 0.50 0.75 1.00 #>  #> $original_design$information_thresholds #> [1] 253.2381 379.8572 506.4762 #>  #>  #> attr(,\"class\") #> [1] \"monitored_design\""},{"path":"https://jbetz-jhu.github.io/impart/articles/design_continuous.html","id":"planning-the-study","dir":"Articles","previous_headings":"","what":"Planning The Study","title":"Designing Information Monitored Trials for Continuous Outcomes","text":"Planning information-monitored study similar many respects planning study fixed sample size. Investigators must decide target statistical inference, also known estimand: continuous outcome, difference means ratio means may interest. estimand chosen, decisions must made constitutes meaningful effect size scale estimand (e.g. difference means 5 ratio means 1.25). Finally, characteristics testing procedure must specified, including desired Type Error Rate, statistical power, direction alternatives interest: amount data must collected depends amount information accruing data, information depending patterns associations among variables, variability outcomes interest, degree missingness. information always available studies planned practice. Fixed sample size designs require investigators make assumptions factors affecting precision: assumptions incorrect, studies can - -powered. Rather planning data collection pre-specified sample size reached, information-monitored study continues data collection data collected provide enough precision identify meaningful difference appropriate power control Type Error.","code":"# Universal Study Design Parameters minimum_difference <- 5 # Effect Size: Difference in Means of 5 or greater alpha <- 0.05 # Type I Error Rate power <- 0.9 # Statistical Power test_sides <- 2 # Direction of Alternatives"},{"path":"https://jbetz-jhu.github.io/impart/articles/design_continuous.html","id":"determining-the-target-information-level","dir":"Articles","previous_headings":"Planning The Study","what":"Determining the Target Information Level","title":"Designing Information Monitored Trials for Continuous Outcomes","text":"information precision required achieve power (1−β)(1 - \\beta) identify treatment effect δ\\delta ss-sided test type error rate α\\alpha final analysis given : ℐF=(Zα/s+Zβδ)2≈1(SE(δ̂))2=1Var(δ̂)\\mathcal{}_{F} = \\left(\\frac{Z_{\\alpha/s} + Z_{\\beta}}{\\delta}\\right)^2 \\approx \\frac{1}{\\left(SE(\\hat{\\delta})\\right)^2} = \\frac{1}{Var(\\hat{\\delta})} example, detecting difference means 5 90% power Type Error rate 0.05 using 2-sided test requires information level 0.4202969. Investigators can collect data precision (reciprocal square standard error) reaches level, analysis appropriate power Type error control.","code":"# Determine information required to achieve desired power at fixed error rate information_single_stage <-   impart::required_information_single_stage(     delta = minimum_difference,     alpha = alpha,     power = power   )  information_single_stage #> [1] 0.4202969"},{"path":"https://jbetz-jhu.github.io/impart/articles/design_continuous.html","id":"translating-information-into-sample-size","dir":"Articles","previous_headings":"Planning The Study","what":"Translating Information into Sample Size","title":"Designing Information Monitored Trials for Continuous Outcomes","text":"Translating information levels sample size requires making assumption nuisance parameters, variability outcomes treatment arm. information_to_n_continuous_1_to_1 function takes information level values nuisance parameters, gives approximate sample size. Note calculation takes account information contained observed outcomes: outcomes missing, analysis makes use information baseline covariates intermediate outcomes, can change sample size target information level reached. Note specific assumptions standard deviations populations met, sample size requirements determined using fixed sample size design (pwr::pwr.t.test) information-monitored design (information_to_n_continuous_1_to_1) . advantage information-adaptive design sample size adapts information accruing data: rather making assumptions standard deviations population, result - -powered trial, data collection proceeds target information level met, ensures adequate power Type Error control.","code":"# Assume Equal Variances: 7.5 approximate_n_sd_7.5 <-   impart::information_to_n_continuous_1_to_1(     information = information_single_stage,     sigma_0 = 7.5,     sigma_1 = 7.5,     round_up = TRUE   ) approximate_n_sd_7.5 #>   n_per_arm n_total #> 1        48      96  # Compute Fixed Sample Size Requirement pwr::pwr.t.test(   d = minimum_difference/7.5,   sig.level = alpha,   power = power ) #>  #>      Two-sample t test power calculation  #>  #>               n = 48.26427 #>               d = 0.6666667 #>       sig.level = 0.05 #>           power = 0.9 #>     alternative = two.sided #>  #> NOTE: n is number in *each* group # Equal Variances: 10 approximate_n_sd_10 <-   impart::information_to_n_continuous_1_to_1(     information = information_single_stage,     sigma_0 = 10,     sigma_1 = 10,     round_up = TRUE   ) approximate_n_sd_10 #>   n_per_arm n_total #> 1        85     170 # Compute Fixed Sample Size Requirement pwr::pwr.t.test(   d = minimum_difference/10,   sig.level = alpha,   power = power ) #>  #>      Two-sample t test power calculation  #>  #>               n = 85.03128 #>               d = 0.5 #>       sig.level = 0.05 #>           power = 0.9 #>     alternative = two.sided #>  #> NOTE: n is number in *each* group"},{"path":"https://jbetz-jhu.github.io/impart/articles/design_continuous.html","id":"sequential-analyses-in-studies","dir":"Articles","previous_headings":"Planning The Study","what":"Sequential Analyses in Studies","title":"Designing Information Monitored Trials for Continuous Outcomes","text":"true effect interest greater minimum meaningful effect δ\\delta, study may still overpowered. Conversely, true effect small, indicates benefits participating study commensurate risks, may futile continue data collection. cases, interim analyses data can used guide ethical, cost-effective data collection. Group-Sequential Designs allow investigators control Type Error rates performing pre-specified interim assessments differences groups. Studies can also stopped early futility accruing data suggest treatment ineffective harmful. number timing analyses must pre-specified, well rules stopping efficacy futility. stopping rules specified using ‘spending functions:’ alpha spending functions define efficacy stopping rules, beta spending functions define futility stopping rules. information group sequential designs, see documentation RPACT package. example utilize O’Brien-Fleming stopping rules efficacy futility. contrast group sequential design, performs analyses pre-specified fractions final sample size, information-monitored study performs analyses data collected provide enough precision identify treatment effect appropriate power Type Error. Analyses conducted precision reaches pre-specified fractions level precision. getDesignGroupSequential function rpact library can used specify appropriate study design. example, two-sided test comparing H0:μT−μC=δ0H_{0}: \\mu_{T} - \\mu_{C} = \\delta_{0} vs. HA:μT−μC≠δ0H_{}: \\mu_{T} - \\mu_{C} \\neq \\delta_{0} one-sided test using RPACT, default boundaries assume users testing H0:μT−μC<δ0H_{0}: \\mu_{T} - \\mu_{C} < \\delta_{0} vs. HA:μT−μC≥δ0H_{}: \\mu_{T} - \\mu_{C} \\ge \\delta_{0}:  Users must must manually correct resulting design boundaries test H0:μT−μC>δ0H_{0}: \\mu_{T} - \\mu_{C} > \\delta_{0} vs. HA:μT−μC≤δ0H_{}: \\mu_{T} - \\mu_{C} \\le \\delta_{0}. correction made, correct_one_sided_gsd() called result, corrects futility efficacy boundaries:  issue resolved, users can specify direction using directionUpper argument RPACT functions: directionUpper = TRUE tests H0:μT−μC<δ0H_{0}: \\mu_{T} - \\mu_{C} < \\delta_{0} vs. HA:μT−μC≥δ0H_{}: \\mu_{T} - \\mu_{C} \\ge \\delta_{0} directionUpper = FALSE tests H0:μT−μC>δ0H_{0}: \\mu_{T} - \\mu_{C} > \\delta_{0} vs. HA:μT−μC≤δ0H_{}: \\mu_{T} - \\mu_{C} \\le \\delta_{0}","code":"# Group Sequential Design Parameters information_rates <-   c(0.50, 0.75, 1.00) # Analyses at 50%, 75%, and 100% of the Total Information type_of_design <- \"asOF\" # O'Brien-Fleming Alpha Spending type_beta_spending <- \"bsOF\" # O'Brien-Fleming Beta Spending # Set up group sequential testing procedure trial_design <-   rpact::getDesignGroupSequential(     alpha = alpha,     beta = 1 - power,     sided = 2,     informationRates = information_rates,     typeOfDesign = type_of_design,     typeBetaSpending = type_beta_spending,     bindingFutility = FALSE   ) # One sided test: Higher values = Better trial_design_one_sided_upper <-   rpact::getDesignGroupSequential(     alpha = alpha,     beta = 1 - power,     sided = 1,     informationRates = information_rates,     typeOfDesign = type_of_design,     typeBetaSpending = type_beta_spending,     bindingFutility = FALSE   )  plot(   trial_design_one_sided_upper,   main = \"One-Sided: Higher Z = Superior\" ) trial_design_one_sided_lower <-   correct_one_sided_gsd(     trial_design = trial_design_one_sided_upper,     higher_better = FALSE   )  plot(   trial_design_one_sided_lower,   main = \"Corrected One-Sided: Lower Z = Superior\" ) # One sided test: Higher values = Better trial_design_one_sided_higher <-   rpact::getDesignGroupSequential(     alpha = alpha,     beta = 1 - power,     sided = 1,     informationRates = information_rates,     typeOfDesign = type_of_design,     typeBetaSpending = type_beta_spending,     bindingFutility = FALSE,     directionUpper = FALSE   )  # One sided test: Lower values = Better trial_design_one_sided_lower <-   rpact::getDesignGroupSequential(     alpha = alpha,     beta = 1 - power,     sided = 1,     informationRates = information_rates,     typeOfDesign = type_of_design,     typeBetaSpending = type_beta_spending,     directionUpper = TRUE   )"},{"path":"https://jbetz-jhu.github.io/impart/articles/design_continuous.html","id":"adjusting-information-for-multiple-analyses","dir":"Articles","previous_headings":"Planning The Study","what":"Adjusting Information for Multiple Analyses","title":"Designing Information Monitored Trials for Continuous Outcomes","text":"sequential analyses information-monitored design, target level information must adjusted: information required specified design 0.4558286, scaled inflation factor mentioned summary design (1.0845394). can retrieved using rpact::getDesignCharacteristics(trial_design).","code":"# Inflate information level to account for multiple testing information_adaptive <-   impart::required_information_sequential(     information_single_stage = information_single_stage,     trial_design = trial_design   ) information_adaptive #> [1] 0.4558286"},{"path":"https://jbetz-jhu.github.io/impart/articles/design_continuous.html","id":"including-covariate-information","dir":"Articles","previous_headings":"Planning The Study","what":"Including Covariate Information","title":"Designing Information Monitored Trials for Continuous Outcomes","text":"Appropriately including information covariates potential increase precision analyses, meaning target information levels can reached lower sample sizes, resulting studies shorter duration. increase precision covariate adjustment never known precisely planning study. Instead relying assumption gain precision covariates, investigators can use information monitoring adapt data collection accruing information covariates outcomes.","code":"# Information Only From Final Outcomes impart::information_to_n_continuous_1_to_1(     information = information_rates*information_adaptive,     sigma_0 = 10,     sigma_1 = 10,     round_up = FALSE   ) #>   information sigma_0 sigma_1 n_per_arm   n_total #> 1   0.2279143      10      10  45.58286  91.16572 #> 2   0.3418714      10      10  68.37429 136.74858 #> 3   0.4558286      10      10  91.16572 182.33143 # 10% Relative Efficiency Increase from Covariates relative_efficiency <- 1.1 # Information From Final Outcomes + Covariates impart::information_to_n_continuous_1_to_1(   information = information_rates*information_adaptive/relative_efficiency,   sigma_0 = 10,   sigma_1 = 10,   round_up = TRUE ) #>   information sigma_0 sigma_1 n_per_arm n_total #> 1   0.2071948      10      10        42      84 #> 2   0.3107922      10      10        63     126 #> 3   0.4143896      10      10        83     166 # 20% Relative Efficiency Increase from Covariates relative_efficiency <- 1.2 # Information From Final Outcomes + Covariates impart::information_to_n_continuous_1_to_1(   information = information_rates*information_adaptive/relative_efficiency,   sigma_0 = 10,   sigma_1 = 10,   round_up = TRUE ) #>   information sigma_0 sigma_1 n_per_arm n_total #> 1   0.1899286      10      10        38      76 #> 2   0.2848929      10      10        57     114 #> 3   0.3798572      10      10        76     152"},{"path":"https://jbetz-jhu.github.io/impart/articles/design_continuous.html","id":"encapsulating-study-design","dir":"Articles","previous_headings":"Planning The Study","what":"Encapsulating Study Design","title":"Designing Information Monitored Trials for Continuous Outcomes","text":"monitored_design object encapsulates information information monitored study fixed outset, including number analyses, information fractions analyses conducted, target level information, null value estimand interest, maximum feasible sample size, pseudorandom number generator seed used analyses.","code":"# Initialize the monitored design monitored_design <-   initialize_monitored_design(     trial_design = trial_design,     null_value = 0,     maximum_sample_size = 280,     information_target = information_adaptive,     orthogonalize = TRUE,     rng_seed_analysis = 54321   )  monitored_design #> $original_design #> $original_design$trial_design #>  #> $original_design$maximum_sample_size #> [1] 280 #>  #> $original_design$null_value #> [1] 0 #>  #> $original_design$information_target #> [1] 0.4558286 #>  #> $original_design$orthogonalize #> [1] TRUE #>  #> $original_design$rng_seed_analysis #> [1] 54321 #>  #> $original_design$information_fractions #> [1] 0.50 0.75 1.00 #>  #> $original_design$information_thresholds #> [1] 0.2279143 0.3418714 0.4558286 #>  #>  #> attr(,\"class\") #> [1] \"monitored_design\""},{"path":"https://jbetz-jhu.github.io/impart/articles/design_time_to_event.html","id":"planning-the-study","dir":"Articles","previous_headings":"","what":"Planning The Study","title":"Designing Information Monitored Trials for Time-to-Event Outcomes","text":"Planning information-monitored study similar many respects planning study fixed sample size. Investigators must decide target statistical inference, also known estimand: time--event outcome, several outcomes may interest, including survival probability (SP), restricted mean survival time (RMST), hazard ratio (HR). estimand chosen, decisions must made constitutes meaningful effect size scale estimand (e.g. increase RMST 1 year). Finally, characteristics testing procedure must specified, including desired Type Error Rate, statistical power, direction alternatives interest: NOTE: section development posted shortly.","code":""},{"path":"https://jbetz-jhu.github.io/impart/articles/impart.html","id":"using-impart","dir":"Articles","previous_headings":"","what":"Using impart","title":"Getting Started with `impart`","text":"several vignettes built impart: include vignettes information monitoring designs well group sequential designs. see available vignettes impart, use vignettes command: Vignettes include example data code show use impart information monitoring group sequential designs. NOTE: impart tested using testthat package continuous integration workflow, test coverage assessed using codecov. Vignettes currently cover complete workflow trials continuous outcome. vignettes binary, ordinal, time--event outcomes active development. Please check back see updates impart software documentation.","code":"vignette(package = \"impart\")"},{"path":"https://jbetz-jhu.github.io/impart/articles/impart.html","id":"citing-impart","dir":"Articles","previous_headings":"","what":"Citing impart","title":"Getting Started with `impart`","text":"using impart practice, please cite work. helps us identify work impacts practice randomized trials.","code":"citation(package = \"impart\") #> To cite package 'impart' in publications use: #>  #>   Van Lancker K, Betz J, Rosenblum M (2024). _impart: Information #>   Monitoring for Precision Adaptive Randomized Trials_. R package #>   version 0.1.0, https://github.com/jbetz-jhu/impart, #>   <https://jbetz-jhu.github.io/impart/>. #>  #> A BibTeX entry for LaTeX users is #>  #>   @Manual{, #>     title = {impart: Information Monitoring for Precision Adaptive Randomized Trials}, #>     author = {Kelly {Van Lancker} and Josh Betz and Michael Rosenblum}, #>     year = {2024}, #>     note = {R package version 0.1.0,  #> https://github.com/jbetz-jhu/impart}, #>     url = {https://jbetz-jhu.github.io/impart/}, #>   }"},{"path":"https://jbetz-jhu.github.io/impart/articles/monitoring_binary.html","id":"monitoring-ongoing-studies","dir":"Articles","previous_headings":"","what":"Monitoring Ongoing Studies","title":"Monitoring Information for a Binary Outcome","text":"fixed sample size design, timing final analysis based last participant’s last visit. Group sequential analyses based pre-specified fractions maximum sample size final outcome observed. Timing analyses studies depends counting number final outcomes observed study. information-monitored designs, times analyses performed recruitment stopped depend information reaches pre-specified thresholds. amount information contained data depends number observations, completeness data, analytic methods used, interrelationships among observed data. Depending analysis methods used, individual contribute baseline covariates treatment assignment information, post-randomization outcomes, even post-randomization auxiliary variables.","code":""},{"path":"https://jbetz-jhu.github.io/impart/articles/monitoring_binary.html","id":"challenges-in-information-monitoring","dir":"Articles","previous_headings":"Monitoring Ongoing Studies","what":"Challenges in Information Monitoring","title":"Monitoring Information for a Binary Outcome","text":"new challenge analyzing data ongoing trial appropriately treat missing data. Suppose following observed: participant newly enrolled, baseline covariates measured, randomized, still study, yet entered follow-windows participant randomized, attend follow-visits cases, covariates, treatment assignment observed, outcomes missing. first case, outcomes yet observed: missing, still observed participant enters study window. latter case, known missing: study window closed without outcome observed. convention can used differentiate outcomes yet observed known missing: Completed assessments observed outcome observed assessment time. assessment occurred, valid outcome obtained, time assessment used. assessment missed, end study window used, indicating last time outcome observed per protocol. -yet-observed assessments missing outcome assessment time.","code":""},{"path":"https://jbetz-jhu.github.io/impart/articles/monitoring_continuous.html","id":"monitoring-ongoing-studies","dir":"Articles","previous_headings":"","what":"Monitoring Ongoing Studies","title":"Monitoring Information for a Continuous Outcome","text":"fixed sample size design, timing final analysis based last participant’s last visit. Group sequential analyses based pre-specified fractions maximum sample size final outcome observed. Timing analyses studies depends counting number final outcomes observed study. information-monitored designs, times analyses performed recruitment stopped depend information reaches pre-specified thresholds. amount information contained data depends number observations, completeness data, analytic methods used, interrelationships among observed data. Depending analysis methods used, individual contribute baseline covariates treatment assignment information, post-randomization outcomes, even post-randomization auxiliary variables.","code":""},{"path":"https://jbetz-jhu.github.io/impart/articles/monitoring_continuous.html","id":"challenges-in-information-monitoring","dir":"Articles","previous_headings":"Monitoring Ongoing Studies","what":"Challenges in Information Monitoring","title":"Monitoring Information for a Continuous Outcome","text":"new challenge analyzing data ongoing trial appropriately treat missing data. Suppose following observed: participant newly enrolled, baseline covariates measured, randomized, still study, yet entered follow-windows participant randomized, attend follow-visits cases, covariates, treatment assignment observed, outcomes missing. first case, outcomes yet observed: missing, still observed participant enters study window. latter case, known missing: study window closed without outcome observed. convention can used differentiate outcomes yet observed known missing: Completed assessments observed outcome observed assessment time. assessment occurred, valid outcome obtained, time assessment used. assessment missed, end study window used, indicating last time outcome observed per protocol. -yet-observed assessments missing outcome assessment time.","code":""},{"path":"https://jbetz-jhu.github.io/impart/articles/monitoring_continuous.html","id":"example-data","dir":"Articles","previous_headings":"Monitoring Ongoing Studies","what":"Example Data:","title":"Monitoring Information for a Continuous Outcome","text":"Information monitoring illustrated using simulated dataset named example_1: dataset wide format, one row per individual. four baseline covariates: x_1, x_2, …, x_4. Treatment assignment indicated binary indicator (tx), time study initiation randomization indicated .enrollment_time. four outcomes assessed 30, 60, 90, 120 days post-randomization: y_1, y_2, y_3 y_4. time observed outcome indicated columns .t_1, .t_2, .t_3 .t_4. missed study visits, time recorded last day within study window individual’s outcome assessed.","code":"head(example_1) #>   .id        x_1        x_2        x_3        x_4 tx      y_1       y_2 #> 1   1  2.0742970  0.1971432 -0.8425884  0.2794844  0 1.591873 -4.535711 #> 2   2  0.2165473 -0.7384296  0.1315016 -1.2419134  1       NA        NA #> 3   3  0.8294726  0.4997821  1.6932555 -0.4063889  0       NA        NA #> 4   4 -1.0206893 -0.2189937 -1.7719120  0.1936013  1 1.212620 -4.533776 #> 5   5 -0.0417332  0.9282685  0.8078133  0.9317145  0 8.655326  6.970372 #> 6   6  0.7275778  1.1756811  0.0226265 -0.2556343  1 6.902055 17.381316 #>        y_3       y_4 .enrollment_time     .t_1      .t_2      .t_3     .t_4 #> 1 13.98543 -1.320242          2.24846 25.01538  56.62636  98.51499 133.0050 #> 2       NA        NA         11.05565 55.05565  85.05565 115.05565 145.0556 #> 3       NA        NA         16.96591 60.96591  90.96591 120.96591 150.9659 #> 4 11.17615 -6.629545         25.13396 59.84544  81.58577 127.78659 154.3419 #> 5 17.62329  9.126240         50.07301 75.94952 111.21967 143.00338 181.4162 #> 6 -2.42570  3.549977         50.93935 80.29181 114.96781 151.34249 177.3846"},{"path":"https://jbetz-jhu.github.io/impart/articles/monitoring_continuous.html","id":"preparing-interim-datasets","dir":"Articles","previous_headings":"Monitoring Ongoing Studies","what":"Preparing Interim Datasets","title":"Monitoring Information for a Continuous Outcome","text":"function prepare_interim_data allows user create indicator variables outcome, variable indicating whether outcome observed (1), known missing (0), yet observed (NA). allows software appropriately handle missing information ongoing study. prepare_interim_data retains columns data relevant analysis hand: covariates, study entry/enrollment time, treatment assignment, outcomes, times outcomes measured. resulting object contains prepared dataset, original dataset, study time data lock, list variables role analyses.","code":"# Obtain time of last event last_event <-   example_1[, c(\".enrollment_time\", \".t_1\", \".t_2\", \".t_3\", \".t_4\")] |>   unlist() |>   max(na.rm = TRUE) |>   ceiling()  prepared_final_data <-   prepare_monitored_study_data(     data = example_1,     study_time = last_event,     id_variable = \".id\",     covariates_variables = c(\"x_1\", \"x_2\", \"x_3\", \"x_4\"),     enrollment_time_variable = \".enrollment_time\",     treatment_variable = \"tx\",     outcome_variables = c(\"y_1\", \"y_2\", \"y_3\", \"y_4\"),     outcome_time_variables = c(\".t_1\", \".t_2\", \".t_3\", \".t_4\"),      # Observe missingness 1 week after target study visit     observe_missing_times = c(30, 60, 90, 120) + 7   )"},{"path":"https://jbetz-jhu.github.io/impart/articles/monitoring_continuous.html","id":"reverting-to-information-earlier-in-the-study","dir":"Articles","previous_headings":"Monitoring Ongoing Studies","what":"Reverting to Information Earlier in the Study","title":"Monitoring Information for a Continuous Outcome","text":"conventions can also used take dataset one point time study, revert information available earlier point study. can useful determining quickly information accruing ongoing study. Let (X1,…,Xp)(X_{1}, \\ldots, X_{p}), AA, (Y1,…,Yj)(Y_{1}, \\ldots, Y_{j}), (TY1,…,TYJ)(T_{Y_{1}}, \\ldots, T_{Y_{J})} respectively denote baseline covariates, treatment assignment, outcome observed study visit j=1,…,Jj = 1, \\ldots, J, times study outcomes observed. Let wjcw^{c}_{j} denote closing study window visit jj. obtain information available tt days randomization first participant: Retain participants TA<tT_{} < t: .e. randomized study time tt Set outcome YjY_{j} unobserved TYj>tT_{Y_{j}} > t: .e. outcomes observed time tt Set YjY_{j} missing TYj−TA>wjcT_{Y_{j}} - T_{} > w^{c}_{j}: otherwise, treat outcome yet observed. example, data known 90 days can obtained using data_at_time_t() function follows: Consider 90 days study initiation: Participant 1 known missed first post-randomization assessment: .r_1 0 Participants 2-5 first post-randomization outcome obtained: .r_1 1 Participant 6 missed first post-randomization assessment, yet known day 90: .r_1 NA observe_missing_times set 0 outcome, outcome NA recorded time assessment treated missing.","code":"data_90 <-   data_at_time_t(     prepared_data = prepared_final_data,     study_time = 90   ) show_cols <- c(\".id\", \"x_2\", \"x_3\", \"x_4\", \"tx\")  # Original Data data_90$original_data[1:6, c(show_cols, \".enrollment_time\", \".t_1\", \"y_1\")] #>   .id        x_2        x_3        x_4 tx .enrollment_time     .t_1      y_1 #> 1   1  0.1971432 -0.8425884  0.2794844  0          2.24846 25.01538 1.591873 #> 2   2 -0.7384296  0.1315016 -1.2419134  1         11.05565 55.05565       NA #> 3   3  0.4997821  1.6932555 -0.4063889  0         16.96591 60.96591       NA #> 4   4 -0.2189937 -1.7719120  0.1936013  1         25.13396 59.84544 1.212620 #> 5   5  0.9282685  0.8078133  0.9317145  0         50.07301 75.94952 8.655326 #> 6   6  1.1756811  0.0226265 -0.2556343  1         50.93935 80.29181 6.902055  # Data known at study day 90 data_90$data[1:6, c(show_cols, \".e\", \".t_1\", \"y_1\", \".r_1\")] #>   .id        x_2        x_3        x_4 tx       .e     .t_1      y_1 .r_1 #> 1   1  0.1971432 -0.8425884  0.2794844  0  2.24846 25.01538 1.591873    1 #> 2   2 -0.7384296  0.1315016 -1.2419134  1 11.05565 55.05565       NA    0 #> 3   3  0.4997821  1.6932555 -0.4063889  0 16.96591 60.96591       NA    0 #> 4   4 -0.2189937 -1.7719120  0.1936013  1 25.13396 59.84544 1.212620    1 #> 5   5  0.9282685  0.8078133  0.9317145  0 50.07301 75.94952 8.655326    1 #> 6   6  1.1756811  0.0226265 -0.2556343  1 50.93935 80.29181 6.902055    1"},{"path":"https://jbetz-jhu.github.io/impart/articles/monitoring_continuous.html","id":"plotting-observed-number-of-outcomes","dir":"Articles","previous_headings":"Monitoring Ongoing Studies","what":"Plotting Observed Number of Outcomes","title":"Monitoring Information for a Continuous Outcome","text":"One part monitoring involves determining many individuals contribute given type information analyses, including baseline covariates, intermediate outcomes, final outcomes. binary time--event analyses, monitoring include number observed events, just number participants completed monitoring. Plotting can done available events:  Plotting can also done events known particular point time:","code":"# Plot events at the end of the study plot_outcome_counts(   prepared_data = prepared_final_data ) # Plot events two years into the study plot_outcome_counts(   prepared_data = prepared_final_data,   study_time = 731 # 2 Years )"},{"path":"https://jbetz-jhu.github.io/impart/articles/monitoring_continuous.html","id":"tabulating-event-times","dir":"Articles","previous_headings":"Monitoring Ongoing Studies","what":"Tabulating Event Times","title":"Monitoring Information for a Continuous Outcome","text":"times event can obtained using count_outcomes: can also used data_at_time_t reconstruct study data particular number observations accrued:","code":"example_1_counts <-   count_outcomes(     prepared_data = prepared_final_data   )  # Timing of first n randomizations subset(   example_1_counts,   event == \"randomization\" ) |> head() #>           event     time count_total count_complete #> 1 randomization  2.24846           1              1 #> 2 randomization 11.05565           2              2 #> 3 randomization 16.96591           3              3 #> 4 randomization 25.13396           4              4 #> 5 randomization 50.07301           5              5 #> 6 randomization 50.93935           6              6  # Timing of first n observations of `y_4` subset(   example_1_counts,   event == \"y_4\" ) |> head() #>      event     time count_total count_complete #> 1106   y_4 133.0050           1              1 #> 2106   y_4 145.0556           2             NA #> 316    y_4 150.9659           3             NA #> 416    y_4 154.3419           4              2 #> 816    y_4 171.3021           5              3 #> 716    y_4 177.3249           6              4  # Find when n observations of `y_4` are first available: subset(   example_1_counts,   event == \"y_4\" & count_complete == 70 ) #>     event     time count_total count_complete #> 944   y_4 707.0069          96             70 # Reconstruct the data when N = 70 final outcomes were obtained data_n_final_70 <-   data_at_time_t(     prepared_data = prepared_final_data,     study_time =        # Time when 70 final outcomes are observed:       ceiling(         subset(           example_1_counts,           event == \"y_4\" & count_complete == 70         )$time       )   )  data_n_70 <- data_n_final_70$data"},{"path":"https://jbetz-jhu.github.io/impart/articles/monitoring_continuous.html","id":"monitoring-information-levels","dir":"Articles","previous_headings":"","what":"Monitoring Information Levels","title":"Monitoring Information for a Continuous Outcome","text":"Information can computed using estimate_information function: users pass function conducts analysis (estimation_function), along list parameters function requires (estimation_arguments). multiple analyses, orthogonalize argument specifies whether test statistics covariance orthogonalized meet independent increments assumption. random number generator seed (rng_seed) can supplied reproducibility. default, variance information returned, can compared target information level analyses: study designed interim final analyses, monitored_design allows user pass results previously conducted analyses estimate_information. Using design specified impart_study_design vignette: current information fraction can computed:","code":"information_n_70 <-   estimate_information(     data = data_n_70,     monitored_design = NULL,     estimation_function = standardization,     estimation_arguments =       list(         estimand = \"difference\",         y0_formula = y_4 ~ x_1 + x_2 + x_3 + x_4,         y1_formula = y_4 ~ x_1 + x_2 + x_3 + x_4,         family = gaussian,         treatment_column = \"tx\",         outcome_indicator_column = \".r_4\"       ),     orthogonalize = TRUE,     rng_seed = 23456   )  information_n_70$covariance_uncorrected #>           estimates #> estimates  4.333183 information_n_70$information #> estimates  #> 0.2307772 information_n_70$covariance_orthogonal_uncorrected #>           estimates #> estimates  4.333183 information_n_70$information_orthogonal #>           estimates #> estimates 0.2307772 # Universal Study Design Parameters minimum_difference <- 5 # Effect Size: Difference in Means of 5 or greater alpha <- 0.05 # Type I Error Rate power <- 0.9 # Statistical Power test_sides <- 2 # Direction of Alternatives  # Determine information required to achieve desired power at fixed error rate information_single_stage <-   impart::required_information_single_stage(     delta = minimum_difference,     alpha = alpha,     power = power   )  # Group Sequential Design Parameters information_rates <-   c(0.50, 0.75, 1.00) # Analyses at 50%, 75%, and 100% of the Total Information type_of_design <- \"asOF\" # O'Brien-Fleming Alpha Spending type_beta_spending <- \"bsOF\" # O'Brien-Fleming Beta Spending  # Set up group sequential testing procedure trial_design <-   rpact::getDesignGroupSequential(     alpha = alpha,     beta = 1 - power,     sided = 2,     informationRates = information_rates,     typeOfDesign = type_of_design,     typeBetaSpending = type_beta_spending,     bindingFutility = FALSE   )  # Inflate information level to account for multiple testing information_adaptive <-   impart::required_information_sequential(     information_single_stage = information_single_stage,     trial_design = trial_design   )  # Initialize the monitored design monitored_design <-   initialize_monitored_design(     trial_design = trial_design,     null_value = 0,     maximum_sample_size = 280,     information_target = information_adaptive,     orthogonalize = TRUE,     rng_seed_analysis = 54321   ) information_n_70$information/information_adaptive #> estimates  #> 0.5062808"},{"path":"https://jbetz-jhu.github.io/impart/articles/monitoring_continuous.html","id":"tools-for-monitoring-information","dir":"Articles","previous_headings":"Monitoring Information Levels","what":"Tools for Monitoring Information","title":"Monitoring Information for a Continuous Outcome","text":"estimate_information can provide estimate information particular point study, understanding rate information accruing time can useful projecting pre-specified information levels may met: trajectory can smoothed using regression, ideally using method resistant outliers, deming::theilsen. Inverse regression can used obtain estimated number outcomes necessary achieve given level information:","code":"data_n_70_trajectory <-    information_trajectory(     prepared_data = data_n_final_70,     monitored_design = monitored_design,     estimation_function = standardization,     estimation_arguments =       list(         estimand = \"difference\",         y0_formula = y_4 ~ x_1 + x_2 + x_3 + x_4,         y1_formula = y_4 ~ x_1 + x_2 + x_3 + x_4,         family = gaussian,         treatment_column = \"tx\",         outcome_indicator_column = \".r_4\"       ),     correction_function = standardization_correction,     orthogonalize = TRUE,     n_min = 40,     n_increment = 2,     rng_seed = 23456,     # Note: control = monitored_analysis_control() is the default     # This does more bootstrap replicates by default     control = monitored_analysis_control_testing()    )  data_n_70_trajectory #>       times randomization y_1 y_2 y_3 y_4 information information_lag_1 #> 1  491.3059            79  59  49  43  40  0.02354317                NA #> 2  506.9791            83  64  52  46  42  0.06373427        0.02354317 #> 3  518.1410            84  64  54  47  44  0.06273970        0.06373427 #> 4  527.6485            85  65  54  50  46  0.06672800        0.06273970 #> 5  538.5259            86  68  56  52  48  0.11713994        0.06672800 #> 6  551.8682            90  69  57  53  50  0.12625125        0.11713994 #> 7  578.2366            95  73  61  56  52  0.14664434        0.12625125 #> 8  597.3935            96  77  63  58  54  0.15105217        0.14664434 #> 9  630.7461           100  79  70  64  56  0.14185643        0.15105217 #> 10 633.0925           100  79  70  64  58  0.15632099        0.14185643 #> 11 635.4027           100  79  70  64  60  0.16605940        0.15632099 #> 12 658.6659           109  82  72  69  62  0.18410677        0.16605940 #> 13 662.5691           110  82  72  69  64  0.17192467        0.18410677 #> 14 675.4510           113  87  74  70  66  0.17923912        0.17192467 #> 15 701.1256           117  96  80  71  68  0.17267007        0.17923912 #> 16 707.0069           117  96  81  73  70  0.18025072        0.17267007 #>    information_change information_pct_change information_fraction #> 1                  NA                     NA           0.05164918 #> 2        0.0401910997              63.060421           0.13982070 #> 3       -0.0009945712              -1.585234           0.13763880 #> 4        0.0039883015               5.976953           0.14638836 #> 5        0.0504119382              43.035653           0.25698243 #> 6        0.0091113103               7.216808           0.27697089 #> 7        0.0203930945              13.906499           0.32170941 #> 8        0.0044078303               2.918085           0.33137934 #> 9       -0.0091957493              -6.482434           0.31120564 #> 10       0.0144645633               9.253117           0.34293810 #> 11       0.0097384163               5.864417           0.36430230 #> 12       0.0180473670               9.802663           0.40389475 #> 13      -0.0121821058              -7.085723           0.37716956 #> 14       0.0073144562               4.080837           0.39321606 #> 15      -0.0065690556              -3.804397           0.37880482 #> 16       0.0075806509               4.205615           0.39543531 plot(   information_fraction ~ y_4,   data = data_n_70_trajectory,   ylim = c(0, 1) )  abline(   lm(     formula = information_fraction ~ y_4,     data = data_n_70_trajectory   ),   lty = 1 )  # Requires `deming` package abline(   deming::theilsen(     formula = information_fraction ~ y_4,     data = data_n_70_trajectory   ),   lty = 3 )  abline(   h = monitored_design$original_design$information_fractions,   lty = 2 )"},{"path":"https://jbetz-jhu.github.io/impart/articles/monitoring_time_to_event.html","id":"monitoring-ongoing-studies","dir":"Articles","previous_headings":"","what":"Monitoring Ongoing Studies","title":"Monitoring Information for a Time-to-Event Outcome","text":"fixed sample size design, timing final analysis based last participant’s last visit. Group sequential analyses based pre-specified fractions maximum sample size final outcome observed. Timing analyses studies depends counting number final outcomes observed study. information-monitored designs, times analyses performed recruitment stopped depend information reaches pre-specified thresholds. amount information contained data depends number observations, completeness data, analytic methods used, interrelationships among observed data. Depending analysis methods used, individual contribute baseline covariates treatment assignment information, post-randomization outcomes, even post-randomization auxiliary variables.","code":""},{"path":"https://jbetz-jhu.github.io/impart/articles/monitoring_time_to_event.html","id":"challenges-in-information-monitoring","dir":"Articles","previous_headings":"Monitoring Ongoing Studies","what":"Challenges in Information Monitoring","title":"Monitoring Information for a Time-to-Event Outcome","text":"new challenge analyzing data ongoing trial appropriately treat missing data. Suppose following observed: participant newly enrolled, baseline covariates measured, randomized, still study, yet entered follow-windows participant randomized, attend follow-visits cases, covariates, treatment assignment observed, outcomes missing. first case, outcomes yet observed: missing, still observed participant enters study window. latter case, known missing: study window closed without outcome observed. convention can used differentiate outcomes yet observed known missing: Completed assessments observed outcome observed assessment time. assessment occurred, valid outcome obtained, time assessment used. assessment missed, end study window used, indicating last time outcome observed per protocol. -yet-observed assessments missing outcome assessment time.","code":""},{"path":"https://jbetz-jhu.github.io/impart/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Kelly Van Lancker. Author. Josh Betz. Author, maintainer. Michael Rosenblum. Author.","code":""},{"path":"https://jbetz-jhu.github.io/impart/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Van Lancker K, Betz J, Rosenblum M (2024). impart: Information Monitoring Precision Adaptive Randomized Trials. R package version 0.1.0, https://github.com/jbetz-jhu/impart, https://jbetz-jhu.github.io/impart/.","code":"@Manual{,   title = {impart: Information Monitoring for Precision Adaptive Randomized Trials},   author = {Kelly {Van Lancker} and Josh Betz and Michael Rosenblum},   year = {2024},   note = {R package version 0.1.0, https://github.com/jbetz-jhu/impart},   url = {https://jbetz-jhu.github.io/impart/}, }"},{"path":"https://jbetz-jhu.github.io/impart/index.html","id":"impart-a-package-for-designing-monitoring-and-analyzing-randomized-trials","dir":"","previous_headings":"","what":"Information Monitoring for Precision Adaptive Randomized Trials","title":"Information Monitoring for Precision Adaptive Randomized Trials","text":"Investigators faced many challenges designing efficient, ethical randomized trials due competing demands: trial must collect enough information identify meaningful benefits harms desired probability also minimizing potential harm suboptimal treatment participants. Satisfying competing demands complicated limited imprecise information available design study. Studies designed around fixed sample size inflexible, requiring investigators wait end data collection perform statistical analyses. Group sequential designs flexible, allowing studies stopped efficacy futility according pre-planned analyses, occur number obtained primary outcomes reach pre-specified fractions final sample size. Covariate adjustment allows investigators potentially gain additional precision utilizing information collected individuals prior randomization statistical analysis. potential increase precision can used provide additional power fixed sample size design group sequential design. methods covariate adjustment directly compatible group sequential designs, broad class methods can made compatible performing orthogonalization resulting estimates variance-covariance matrix (Van Lancker, Betz, Rosenblum 2022). disadvantage covariate adjustment amount precision gained covariate adjustment known precisely outset study. complicates ability use covariate adjustment reduce required sample size instead providing additional power. Rather planning analyses based specific number participants, investigators can pre-specify analyses reach pre-specified levels precision: known information monitoring (Mehta Tsiatis 2001). allows investigators adapt study precision accruing data, reducing risk - overpowered trials. also allows investigators use covariate adjustment shorten trial duration, rather just providing additional power precision. impart package can used performing covariate adjustment group sequential designs designing, monitoring, analyzing information monitored designs.","code":""},{"path":"https://jbetz-jhu.github.io/impart/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Information Monitoring for Precision Adaptive Randomized Trials","text":"can install development version impart GitHub using install_github devtools package: several vignettes built impart: listed ‘Articles’ tab , can listed R console: NOTE: impart tested using testthat package continuous integration workflow, test coverage assessed using codecov. Vignettes currently cover complete workflow trials continuous outcome. vignettes binary, ordinal, time--event outcomes active development. Please check back see updates impart software documentation.","code":"# install.packages(\"devtools\") # If not already installed, install devtools devtools::install_github(\"jbetz-jhu/impart\") vignette(package = \"impart\")"},{"path":"https://jbetz-jhu.github.io/impart/index.html","id":"background-for-information-monitoring","dir":"","previous_headings":"","what":"Background for Information Monitoring","title":"Information Monitoring for Precision Adaptive Randomized Trials","text":"can estimate precision required achieve power (1−β)(1 - \\beta) identify treatment effect δ\\delta ss-sided test type error rate α\\alpha using: ℐ=(Zα/s+Zβδ)2≈1(SE(δ̂))2=1Var(δ̂)\\mathcal{} = \\left(\\frac{Z_{\\alpha/s} + Z_{\\beta}}{\\delta}\\right)^2 \\approx \\frac{1}{\\left(SE(\\hat{\\delta})\\right)^2} = \\frac{1}{Var(\\hat{\\delta})} uses square empirical standard error (empirical variance estimate) measure precision treatment effect δ\\delta can measured data hand. precision-adaptive design can reduce risk - overpowered trials collecting data precision sufficient conduct analyses.","code":""},{"path":"https://jbetz-jhu.github.io/impart/index.html","id":"approximate-precision-vs-sample-size","dir":"","previous_headings":"Background for Information Monitoring","what":"Approximate Precision vs. Sample Size","title":"Information Monitoring for Precision Adaptive Randomized Trials","text":"Let TT denote treatment CC denote control, Y()Y^{()} denote outcome interest treatment assigment AA, =1A = 1 indicates assignment treatment arm =0A = 0 denotes assignment control arm. continuous outcome, required information estimate difference means δDIM=E[Y(1)]−E[Y(0)]\\delta_{DIM} = E[Y^{(1)}] - E[Y^{(0)}] depends sample size variances outcomes treatment arm: SE(δ)=σT2nT+σC2nCSE(\\delta) = \\sqrt{\\frac{\\sigma^{2}_{T}}{n_{T}} + \\frac{\\sigma^{2}_{C}}{n_{C}}} binary outcome, required information estimate risk difference δRD=E[Y(1)]−E[Y(0)]\\delta_{RD} = E[Y^{(1)}] - E[Y^{(0)}] depends response rate control arm (πC=πT−δ)(\\pi_{C} = \\pi_{T} - \\delta): SE(δ)=πT(1−πT)nT+πC(1−πC)nCSE(\\delta) = \\sqrt{\\frac{\\pi_{T}(1 - \\pi_{T})}{n_{T}} + \\frac{\\pi_{C}(1 - \\pi_{C})}{n_{C}}} ordinal outcome KK categories, let πAK=Pr{Y()=k}\\pi_{}^{K} = Pr\\{Y^{()} = k\\} denote probability outcome category kk treatment AA. Mann-Whitney estimand ϕ\\phi probability outcome good better treatment arm relative control adjustment ties: ϕ=Pr{Y(T)>Y(C)}+12Pr{Y(T)=Y(C)}\\phi = Pr\\{Y^{(T)} > Y^{(C)}\\} + \\frac{1}{2} Pr\\{Y^{(T)} = Y^{(C)}\\} also known competing probability. precision/information depends ϕ\\phi (Fay Malinovsky 2018): SE(δ)≈ϕ(1−ϕ)nTnC(1+(nT+nC−22)(ϕ1+ϕ+1−ϕ2−ϕ))SE(\\delta) \\approx \\sqrt{\\frac{\\phi(1 - \\phi)}{n_{T}n_{C}}\\left(1 + \\left(\\frac{n_{T} + n_{C} - 2}{2}\\right)\\left(\\frac{\\phi}{1 + \\phi} + \\frac{1 - \\phi}{2 - \\phi} \\right)\\right)} Alternatively, precision/information can obtained distribution outcomes treatment arm (Zhao, Rahardja, Qu 2008). Let N=nT+nCN = n_{T} + n_{C}: SE(δ)=112(nTnC)(N+1−1N(N−1))∑k=1K(πTknT+πCknC)SE(\\delta) = \\sqrt{\\frac{1}{12(n_{T}n_{C})}\\left(N+1 - \\frac{1}{N(N-1)}\\right)\\sum_{k = 1}^{K}(\\pi_{T}^{k}n_{T} + \\pi_{C}^{k}n_{C})} Expressions information estimands can obtained elsewhere (Jennison Turnbull 1999). practice, parameters expressions precisely known priori. advantage information monitoring design sample size fixed priori based estimates parameters, adapts automatically precision accruing data.","code":""},{"path":"https://jbetz-jhu.github.io/impart/index.html","id":"covariate-adjustment-in-randomized-trials","dir":"","previous_headings":"Background for Information Monitoring","what":"Covariate Adjustment in Randomized Trials","title":"Information Monitoring for Precision Adaptive Randomized Trials","text":"Covariate adjusted analyses can also give greater precision unadjusted analyses without introducing stringent assumptions, however amount precision gained adjusted analyses also precisely known priori (Benkeser et al. 2020). Instead predicating design assumptions potential gain precision covariate adjustment, precision-adaptive design automatically adjusts sample size accordingly. relative efficiency covariate adjusted estimator unadjusted estimator REA/U=Var(θU)/Var(θA)RE_{/U} = Var(\\theta_{U})/Var(\\theta_{}). relative change variance covariate-adjusted analysis unadjusted analysis : RCVA/U=Var(θA)−Var(θU)Var(θU)=1REA/U−1RCV_{/U} = \\frac{Var(\\theta_{}) - Var(\\theta_{U})}{Var(\\theta_{U})} = \\frac{1}{RE_{/U}} - 1 Alternatively, REA/U=1/(1+RCVA/U)RE_{/U} = 1/(1 + RCV_{/U}): covariate adjusted analysis relative efficiency 1.25, relative change variance -0.2, -20% change variance. Since precision inverse variance, relative change precision covariate-adjusted analysis unadjusted analysis : RCPA/U=1/Var(θA)−1/Var(θU)1/Var(θU)=Var(θU)/Var(θA)−1=REA/U−1RCP_{/U} = \\frac{1/Var(\\theta_{}) - 1/Var(\\theta_{U})}{1/Var(\\theta_{U})} = Var(\\theta_{U})/Var(\\theta_{}) - 1 = RE_{/U} - 1 Alternatively, REA/U=1+RCPA/URE_{/U} = 1 + RCP_{/U}: covariate adjusted analysis relative efficiency 1.25, relative change precision 0.25, 25% change precision.","code":""},{"path":"https://jbetz-jhu.github.io/impart/index.html","id":"sequential-analyses","dir":"","previous_headings":"Background for Information Monitoring","what":"Sequential Analyses","title":"Information Monitoring for Precision Adaptive Randomized Trials","text":"Pre-planned interim analyses allow investigators stop randomized trial early efficacy futility (Jennison Turnbull 1999). Precision-adaptive trials can integrate interim analyses covariate adjustment, using broad class methods (Van Lancker, Betz, Rosenblum 2022). Mehta Tsiatis (2001) illustrate information-adaptive designs practice. tutorial implementing interim analyses, see Lakens, Pahlke, Wassmer (2021).","code":""},{"path":[]},{"path":"https://jbetz-jhu.github.io/impart/reference/apply_stopping_rule_z.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply group sequential stopping rules to test statistics — apply_stopping_rule_z","title":"Apply group sequential stopping rules to test statistics — apply_stopping_rule_z","text":"Group sequential designs allow investigators perform pre-planned interim assessments futility efficacy ongoing trial preserving Familywise Type Error Rate (FWER). Differences observed information levels specified initial design require boundaries updated order preserve FWER control. function allows users update boundaries according observed information levels, apply stopping rules, return resulting decisions.","code":""},{"path":"https://jbetz-jhu.github.io/impart/reference/apply_stopping_rule_z.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply group sequential stopping rules to test statistics — apply_stopping_rule_z","text":"","code":"apply_stopping_rule_z(   test_statistics,   trial_design,   information_fraction,   information_target )"},{"path":"https://jbetz-jhu.github.io/impart/reference/apply_stopping_rule_z.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply group sequential stopping rules to test statistics — apply_stopping_rule_z","text":"test_statistics numeric vector standardized test statistics trial_design TrialDesignGroupSequential object created rpact::getDesignGroupSequential() information_fraction numeric vector containing observed information fractions information_target numeric scalar containing target information level, created required_information_single_stage()","code":""},{"path":"https://jbetz-jhu.github.io/impart/reference/apply_stopping_rule_z.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply group sequential stopping rules to test statistics — apply_stopping_rule_z","text":"list containing updated TrialDesignGroupSequential object object, resulting decision, supporting data.","code":""},{"path":[]},{"path":"https://jbetz-jhu.github.io/impart/reference/apply_stopping_rule_z.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply group sequential stopping rules to test statistics — apply_stopping_rule_z","text":"","code":"# Two-sided design with O'Brien-Fleming efficacy stopping and non-binding # O'Brien Fleming Beta Spending Futility with 2 interim analyses at 50% and # 75%  # Create Initial `TrialDesignGroupSequential` Object: two_sided_of_efficacy_nb_of_futility_0 <-  rpact::getDesignGroupSequential(    alpha = 0.05, # 5% Type I Error    beta = 1 - 0.80, # 80% Power    sided = 2, # Two-Sided Test    # Interim analyses at 50%, 75%, 100% of Information Target    informationRates = c(0.5, 0.75, 1),    # Efficacy and Non-Binding Futility Stopping using O'Brien-Fleming    # alpha- and beta- spending functions    typeOfDesign = \"asOF\",    typeBetaSpending = \"bsOF\",    bindingFutility = FALSE  )   # Test Statistics at Interim Analysis 1  test_statistics_1 <- c(1.0)   # Observed information fraction at 1st analysis = 52.5% vs. 50% in design  information_fraction_1 <- c(0.525)  information_target <- 50   analysis_decision_1 <-    apply_stopping_rule_z(      test_statistics = test_statistics_1,      trial_design = two_sided_of_efficacy_nb_of_futility_0,      information_fraction = information_fraction_1,      information_target = information_target    )   # Test Statistics at Interim Analysis 2  test_statistics_2 <- c(1.0, 2.2)   # Observed information fraction at 2nd analysis = 74.5% vs. 75% in design  information_fraction_2 <- c(0.525, 0.745)   analysis_decision_2 <-    apply_stopping_rule_z(      test_statistics = test_statistics_2,      trial_design =      # Use updated design from analysis 1      analysis_decision_1$trial_design_updated,      information_fraction = information_fraction_2,      information_target = information_target  )   # Test Statistics at Interim Analysis 3  test_statistics_3 <- c(1.0, 2.2, 2.3)   # Observed information fraction at 3rd analysis = 102% vs. 100% in design  information_fraction_3 <- c(0.525, 0.745, 1.02)  analysis_decision_3 <-    apply_stopping_rule_z(      test_statistics = test_statistics_3,      trial_design =      # Use updated design from analysis 1      analysis_decision_2$trial_design_updated,      information_fraction = information_fraction_3,      information_target = information_target  )"},{"path":"https://jbetz-jhu.github.io/impart/reference/asymptotic_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Approximate information from a random samples of a given size for continuous and binary outcomes — asymptotic_info","title":"Approximate information from a random samples of a given size for continuous and binary outcomes — asymptotic_info","text":"functions provide asymptotic approximation information (.e. precision, inverse variance) provided two samples assumed values nuisance parameters continuous binary outcomes.","code":""},{"path":"https://jbetz-jhu.github.io/impart/reference/asymptotic_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Approximate information from a random samples of a given size for continuous and binary outcomes — asymptotic_info","text":"","code":"asymptotic_information_difference_means(n_0, sigma_0, n_1, sigma_1)  asymptotic_information_difference_proportions(n_0, pi_0, n_1, pi_1)"},{"path":"https://jbetz-jhu.github.io/impart/reference/asymptotic_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Approximate information from a random samples of a given size for continuous and binary outcomes — asymptotic_info","text":"n_0 Numeric vector containing sample size control arm sigma_0 Variance outcomes population individuals receiving control intervention n_1 Numeric vector containing sample size treatment arm sigma_1 Variance outcomes population individuals receiving active intervention pi_0 Probability event population individuals receiving control intervention pi_1 Probability event population individuals receiving control intervention","code":""},{"path":"https://jbetz-jhu.github.io/impart/reference/asymptotic_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Approximate information from a random samples of a given size for continuous and binary outcomes — asymptotic_info","text":"parameters scalars, result scalar, indicating approximate information. multiple values specified, grid unique parameters constructed, approximate information computed value parameters.","code":""},{"path":[]},{"path":"https://jbetz-jhu.github.io/impart/reference/asymptotic_info.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Approximate information from a random samples of a given size for continuous and binary outcomes — asymptotic_info","text":"","code":"# When a single value is supplied for each parameter, a scalar is returned: asymptotic_information_difference_means(   n_0 = 50,   sigma_0 = 5,   n_1 = 50,   sigma_1 = 5 ) #> [1] 1  # When multiple values are supplied for one or more parameters, the grid of # parameters are created, and a data.frame is returned. asymptotic_information_difference_means(   n_0 = c(50, 75),   sigma_0 = 5,   n_1 = c(50, 75),   sigma_1 = 5 ) #>   n_0 sigma_0 n_1 sigma_1 information_asymptotic #> 1  50       5  50       5                    1.0 #> 2  75       5  50       5                    1.2 #> 3  50       5  75       5                    1.2 #> 4  75       5  75       5                    1.5"},{"path":"https://jbetz-jhu.github.io/impart/reference/asymptotic_information_mann_whitney_fm.html","id":null,"dir":"Reference","previous_headings":"","what":"Approximate information from a random samples of a given size for ordinal outcomes — asymptotic_information_mann_whitney_fm","title":"Approximate information from a random samples of a given size for ordinal outcomes — asymptotic_information_mann_whitney_fm","text":"functions provide asymptotic approximation information (.e. precision, inverse variance) provided two samples either assumed value Mann-Whitney estimand probability mass functions (PMFs) ordinal outcome treatment control populations.","code":""},{"path":"https://jbetz-jhu.github.io/impart/reference/asymptotic_information_mann_whitney_fm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Approximate information from a random samples of a given size for ordinal outcomes — asymptotic_information_mann_whitney_fm","text":"","code":"asymptotic_information_mann_whitney_fm(   n_0,   n_1,   mw = NULL,   pmf_1 = NULL,   pmf_0 = NULL,   adjust = TRUE )"},{"path":"https://jbetz-jhu.github.io/impart/reference/asymptotic_information_mann_whitney_fm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Approximate information from a random samples of a given size for ordinal outcomes — asymptotic_information_mann_whitney_fm","text":"n_0 Numeric vector containing sample size control arm n_1 Numeric vector containing sample size treatment arm mw Numeric vector containing Mann-Whitney estimand pmf_1 Numeric vector matrix row vectors, containing probability mass function outcomes population individuals receiving active intervention pmf_0 Numeric vector matrix row vectors, containing probability mass function outcomes population individuals receiving control intervention adjust (Scalar: Logical) estimand adjusted ties? NOTE: can computed pmf_0 pmf_1 supplied.","code":""},{"path":"https://jbetz-jhu.github.io/impart/reference/asymptotic_information_mann_whitney_fm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Approximate information from a random samples of a given size for ordinal outcomes — asymptotic_information_mann_whitney_fm","text":"parameters scalars, result scalar, indicating approximate information. multiple values specified, grid unique parameters constructed, approximate information computed value parameters.","code":""},{"path":[]},{"path":"https://jbetz-jhu.github.io/impart/reference/asymptotic_information_mann_whitney_fm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Approximate information from a random samples of a given size for ordinal outcomes — asymptotic_information_mann_whitney_fm","text":"","code":"# When a single value is supplied for each parameter, a scalar is returned: asymptotic_information_mann_whitney_fm(     n_0 = 100,     n_1 = 100,     mw = 0.75,     adjust = FALSE   ) #> [1] 0.001185536  # When multiple values are supplied for one or more parameters, the grid of # parameters are created, and a data.frame is returned. asymptotic_information_mann_whitney_fm(   n_0 = c(100, 150),   n_1 = c(100, 150),   mw = 0.75,   adjust = FALSE ) #>   n_0 n_1   mw t information_asymptotic #> 1 100 100 0.75 1           0.0011855357 #> 2 150 100 0.75 1           0.0009867857 #> 3 100 150 0.75 1           0.0009867857 #> 4 150 150 0.75 1           0.0007888095   # Specifying PMFs - With and Without Tie Adjustment asymptotic_information_mann_whitney_fm(   n_0 = 100,   n_1 = 100,   pmf_0 = c(0.2, 0.2, 0.6),   pmf_1 = c(0.1, 0.1, 0.8),   adjust = TRUE ) #> [1] 0.001036432  # Specifying Multiple PMFs asymptotic_information_mann_whitney_fm(   n_0 = 100,   n_1 = 100,   pmf_0 =     rbind(       c(0.2, 0.2, 0.6),       c(0.3, 0.1, 0.6)     ),   pmf_1 =     rbind(       c(0.1, 0.1, 0.8),       c(0.05, 0.05, 0.9)       ),   adjust = TRUE ) #>   n_0 n_1 pmf_0 pmf_1    mw         t pmf_0_1 pmf_0_2 pmf_0_3 pmf_1_1 pmf_1_2 #> 1 100 100     1     1 0.600 0.6502663     0.2     0.2     0.6    0.10    0.10 #> 2 100 100     2     1 0.610 0.6480162     0.3     0.1     0.6    0.10    0.10 #> 3 100 100     1     2 0.650 0.5742331     0.2     0.2     0.6    0.05    0.05 #> 4 100 100     2     2 0.655 0.5723581     0.3     0.1     0.6    0.05    0.05 #>   pmf_1_3 information_asymptotic #> 1     0.8           0.0010364315 #> 2     0.8           0.0010218898 #> 3     0.9           0.0008578564 #> 4     0.9           0.0008481421"},{"path":"https://jbetz-jhu.github.io/impart/reference/calculate_covariance.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute bootstrap covariance of estimates — calculate_covariance","title":"Compute bootstrap covariance of estimates — calculate_covariance","text":"Compute bootstrap covariance estimates","code":""},{"path":"https://jbetz-jhu.github.io/impart/reference/calculate_covariance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute bootstrap covariance of estimates — calculate_covariance","text":"","code":"calculate_covariance(   data,   ids_by_analysis = NULL,   bootstrap_ids = NULL,   bootstrap_results = NULL,   estimation_function,   estimation_arguments,   rng_seed,   control = monitored_analysis_control() )"},{"path":"https://jbetz-jhu.github.io/impart/reference/calculate_covariance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute bootstrap covariance of estimates — calculate_covariance","text":"data data.frame containing data analyzed. column named .id indicates observations correspond individual. ids_by_analysis list containing IDs enrolled analysis occurred bootstrap_ids list IDs resampled earlier analyses: NULL first analysis bootstrap_results numeric matrix estimates: bootstrap estimates analysis stored corresponding column. estimation_function function whose arguments include data.frame named data estimation_arguments list additional arguments needed estimation_function rng_seed numeric scalar seeding L'Ecuyer pseudorandom number generator control list computing arguments. See monitored_analysis_control details default computing arguments.","code":""},{"path":"https://jbetz-jhu.github.io/impart/reference/calculate_covariance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute bootstrap covariance of estimates — calculate_covariance","text":"list containing covariance matrix estimates, matrix bootstrap estimates, list IDs individuals bootstrap replicate analysis.","code":""},{"path":[]},{"path":"https://jbetz-jhu.github.io/impart/reference/calculate_covariance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute bootstrap covariance of estimates — calculate_covariance","text":"","code":"# To be added"},{"path":"https://jbetz-jhu.github.io/impart/reference/calculate_estimate.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute an estimate from a wrapper function — calculate_estimate","title":"Compute an estimate from a wrapper function — calculate_estimate","text":"Compute estimate wrapper function","code":""},{"path":"https://jbetz-jhu.github.io/impart/reference/calculate_estimate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute an estimate from a wrapper function — calculate_estimate","text":"","code":"calculate_estimate(data, estimation_function, estimation_arguments)"},{"path":"https://jbetz-jhu.github.io/impart/reference/calculate_estimate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute an estimate from a wrapper function — calculate_estimate","text":"data data.frame containing data analyzed estimation_function function whose arguments include data.frame named data estimation_arguments list additional arguments needed estimation_function","code":""},{"path":"https://jbetz-jhu.github.io/impart/reference/calculate_estimate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute an estimate from a wrapper function — calculate_estimate","text":"numeric scalar containing computed estimate","code":""},{"path":[]},{"path":"https://jbetz-jhu.github.io/impart/reference/calculate_estimate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute an estimate from a wrapper function — calculate_estimate","text":"","code":"# To be added"},{"path":"https://jbetz-jhu.github.io/impart/reference/colon_cancer.html","id":null,"dir":"Reference","previous_headings":"","what":"colon_cancer: Processed Moerton Colon Cancer Data — colon_cancer","title":"colon_cancer: Processed Moerton Colon Cancer Data — colon_cancer","text":"Data adjuvant chemotherapy trial colon cancer variables renamed labeled, missing covariates imputed, time scale converted years. information, see ?survival::colon.","code":""},{"path":"https://jbetz-jhu.github.io/impart/reference/colon_cancer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"colon_cancer: Processed Moerton Colon Cancer Data — colon_cancer","text":"","code":"colon_cancer"},{"path":[]},{"path":"https://jbetz-jhu.github.io/impart/reference/colon_cancer.html","id":"colon-cancer","dir":"Reference","previous_headings":"","what":"colon_cancer","title":"colon_cancer: Processed Moerton Colon Cancer Data — colon_cancer","text":"data frame 929 rows 15 columns: .id Participant ID arm Treatment Assignment age Patient age sex Patient sex obstruction Colon obstruction tumor perforation Colon perforation tumor organ_adherence Organ adherence tumor positive_nodes Lymph nodes detectable cancer differentiation Differentiation tumor local_spread Extent local spread tumor time_surgery_registration Time surgery registration event_death Death study (1 = yes, 0 = ) event_recurrence Recurrence (1 = yes, 0 = ) years_to_death Time death/censoring years years_to_recurrence Time recurrence/censoring years","code":""},{"path":"https://jbetz-jhu.github.io/impart/reference/compute_bootstrap.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute bootstrap from a vector of IDs — compute_bootstrap","title":"Compute bootstrap from a vector of IDs — compute_bootstrap","text":"Bootstrapping done resampling rows corresponding resampled ID work long wide format data without reshaping.","code":""},{"path":"https://jbetz-jhu.github.io/impart/reference/compute_bootstrap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute bootstrap from a vector of IDs — compute_bootstrap","text":"","code":"compute_bootstrap_serial(data, ids, estimation_function, estimation_arguments)  compute_bootstrap_parallel(   data,   ids,   estimation_function = estimation_function,   estimation_arguments = estimation_arguments,   n_cores = 1,   use_load_balancing = FALSE,   required_packages = character(0) )"},{"path":"https://jbetz-jhu.github.io/impart/reference/compute_bootstrap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute bootstrap from a vector of IDs — compute_bootstrap","text":"data data.frame containing data analyzed. column named .id indicates observations correspond individual. ids vector IDs resample data estimation_function function whose arguments include data.frame named data estimation_arguments list additional arguments needed estimation_function n_cores Scalar number cores use. use_load_balancing Logical scalar: load balancing used? required_packages character vector required packages: extracted control argument calculate_covariance()","code":""},{"path":"https://jbetz-jhu.github.io/impart/reference/compute_bootstrap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute bootstrap from a vector of IDs — compute_bootstrap","text":"vector containing results estimation_function evaluated bootstrap replicate data contained columns ids","code":""},{"path":[]},{"path":"https://jbetz-jhu.github.io/impart/reference/compute_bootstrap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute bootstrap from a vector of IDs — compute_bootstrap","text":"","code":"# to be added"},{"path":"https://jbetz-jhu.github.io/impart/reference/correct_one_sided_gsd.html","id":null,"dir":"Reference","previous_headings":"","what":"Correct one-sided trialDesignGroupSequential object — correct_one_sided_gsd","title":"Correct one-sided trialDesignGroupSequential object — correct_one_sided_gsd","text":"Currently rpact::getDesignGroupSequential(), test one-sided, way specify direction null alternative hypotheses. open issue rpact.. correction necessary using rpact impart together exporting correct boundaries one-sided trialDesignGroupSequential object alternative less null value.","code":""},{"path":"https://jbetz-jhu.github.io/impart/reference/correct_one_sided_gsd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Correct one-sided trialDesignGroupSequential object — correct_one_sided_gsd","text":"","code":"correct_one_sided_gsd(trial_design, higher_better = TRUE)"},{"path":"https://jbetz-jhu.github.io/impart/reference/correct_one_sided_gsd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Correct one-sided trialDesignGroupSequential object — correct_one_sided_gsd","text":"trial_design trialDesignGroupSequential called argument sided = 1 (.e. one-sided alternative). higher_better Logical scalar: alternative theta > theta_0 (TRUE) theta < theta_0 (FALSE) ","code":""},{"path":"https://jbetz-jhu.github.io/impart/reference/correct_one_sided_gsd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Correct one-sided trialDesignGroupSequential object — correct_one_sided_gsd","text":"trialDesignGroupSequential object efficacy futility boundaries corrected logical scalar directionUpper indicating whether alternative greater null value (TRUE) less null value (FALSE).","code":""},{"path":"https://jbetz-jhu.github.io/impart/reference/correct_one_sided_gsd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Correct one-sided trialDesignGroupSequential object — correct_one_sided_gsd","text":"","code":"# One sided test: Higher values = Better trial_design_one_sided_higher <-   rpact::getDesignGroupSequential(     alpha = 0.05,     beta = 1 - 0.80,     sided = 1,     informationRates = c(0.50, 0.75, 1),     typeOfDesign = \"asOF\",     typeBetaSpending = \"bsOF\",     bindingFutility = FALSE   )  # Bounds assumed are for $H_{A}: \\theta > \\theta_{0}$ trial_design_one_sided_higher$criticalValues #> [1] 2.537988 2.015923 1.720132 trial_design_one_sided_higher$futilityBounds #> [1] 0.4121106 1.1345811  # One sided test: Lower values = Better trial_design_one_sided_lower <-   correct_one_sided_gsd(     trial_design = trial_design_one_sided_higher,     higher_better = FALSE   )  # Bounds for $H_{A}: \\theta < \\theta_{0}$ trial_design_one_sided_lower$criticalValues #> [1] -2.537988 -2.015923 -1.720132 trial_design_one_sided_lower$futilityBounds #> [1] -0.4121106 -1.1345811"},{"path":"https://jbetz-jhu.github.io/impart/reference/count_outcomes.html","id":null,"dir":"Reference","previous_headings":"","what":"Count outcome events from prepared study data — count_outcomes","title":"Count outcome events from prepared study data — count_outcomes","text":"function uses timing events, randomization times times outcomes, reconstruct data available earlier point study. can used monitoring rate information accrual course study. function returns count outcomes study time.","code":""},{"path":"https://jbetz-jhu.github.io/impart/reference/count_outcomes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Count outcome events from prepared study data — count_outcomes","text":"","code":"count_outcomes(prepared_data, study_time = NULL)"},{"path":"https://jbetz-jhu.github.io/impart/reference/count_outcomes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Count outcome events from prepared study data — count_outcomes","text":"prepared_data prepeared dataset: see prepare_monitored_study_data study_time numeric scalar indicating study time data reconstructed events counted","code":""},{"path":"https://jbetz-jhu.github.io/impart/reference/count_outcomes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Count outcome events from prepared study data — count_outcomes","text":"data.frame long format, one row per individual per event (.e. randomization, outcomes).","code":""},{"path":"https://jbetz-jhu.github.io/impart/reference/count_outcomes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Count outcome events from prepared study data — count_outcomes","text":"","code":"# To be added"},{"path":"https://jbetz-jhu.github.io/impart/reference/count_outcomes_at_time_t.html","id":null,"dir":"Reference","previous_headings":"","what":"Reconstruct the count of events at a given study time during a study — count_outcomes_at_time_t","title":"Reconstruct the count of events at a given study time during a study — count_outcomes_at_time_t","text":"function uses timing events, randomization times times outcomes, reconstruct data available earlier point study. can used monitoring rate information accrual course study. returns number events particular point study.","code":""},{"path":"https://jbetz-jhu.github.io/impart/reference/count_outcomes_at_time_t.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reconstruct the count of events at a given study time during a study — count_outcomes_at_time_t","text":"","code":"count_outcomes_at_time_t(prepared_data, study_times)"},{"path":"https://jbetz-jhu.github.io/impart/reference/count_outcomes_at_time_t.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reconstruct the count of events at a given study time during a study — count_outcomes_at_time_t","text":"prepared_data prepeared dataset: see prepare_monitored_study_data study_times numeric vector study times count events.","code":""},{"path":"https://jbetz-jhu.github.io/impart/reference/count_outcomes_at_time_t.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reconstruct the count of events at a given study time during a study — count_outcomes_at_time_t","text":"data.frame","code":""},{"path":"https://jbetz-jhu.github.io/impart/reference/count_outcomes_at_time_t.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reconstruct the count of events at a given study time during a study — count_outcomes_at_time_t","text":"","code":"# To be added"},{"path":"https://jbetz-jhu.github.io/impart/reference/data_at_time_t.html","id":null,"dir":"Reference","previous_headings":"","what":"Reconstruct data available at an earlier point in a study — data_at_time_t","title":"Reconstruct data available at an earlier point in a study — data_at_time_t","text":"function uses timing events, randomization times times outcomes, reconstruct data available earlier point study. can used monitoring rate information accrual course study.","code":""},{"path":"https://jbetz-jhu.github.io/impart/reference/data_at_time_t.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reconstruct data available at an earlier point in a study — data_at_time_t","text":"","code":"data_at_time_t(prepared_data, study_time)"},{"path":"https://jbetz-jhu.github.io/impart/reference/data_at_time_t.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reconstruct data available at an earlier point in a study — data_at_time_t","text":"prepared_data prepeared dataset: see prepare_monitored_study_data study_time numeric scalar indicating study time data reconstructed","code":""},{"path":"https://jbetz-jhu.github.io/impart/reference/data_at_time_t.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reconstruct data available at an earlier point in a study — data_at_time_t","text":"list","code":""},{"path":"https://jbetz-jhu.github.io/impart/reference/data_at_time_t.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reconstruct data available at an earlier point in a study — data_at_time_t","text":"","code":"# To be added"},{"path":"https://jbetz-jhu.github.io/impart/reference/estimate_information.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate the observed information level — estimate_information","title":"Estimate the observed information level — estimate_information","text":"function computing information level dataset. multi-stage designs, earlier results can passed monitored_design object.","code":""},{"path":"https://jbetz-jhu.github.io/impart/reference/estimate_information.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate the observed information level — estimate_information","text":"","code":"estimate_information(   data,   monitored_design,   estimation_function,   estimation_arguments,   correction_function = NULL,   orthogonalize = NULL,   rng_seed,   return_results = FALSE,   control = monitored_analysis_control() )"},{"path":"https://jbetz-jhu.github.io/impart/reference/estimate_information.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate the observed information level — estimate_information","text":"data data.frame containing data analyzed. column named .id indicates observations correspond individual. monitored_design object class monitored_design created using initialize_monitored_design() estimation_function function whose arguments include data.frame named data estimation_arguments list additional arguments needed estimation_function correction_function function takes named arguments estimation_arguments returns numeric scalar: used scale variance computing information. orthogonalize Logical scalar: estimates, covariance, resulting test statistics orthogonalized? rng_seed Numeric scalar containing L'Ecuyer pseudorandom number generator seed return_results Logical scalar: estimates returned, covariance information levels? control list containing control arguments computation, typically created monitored_analysis_control()","code":""},{"path":"https://jbetz-jhu.github.io/impart/reference/estimate_information.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate the observed information level — estimate_information","text":"list containing following elements:","code":""},{"path":[]},{"path":"https://jbetz-jhu.github.io/impart/reference/estimate_information.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate the observed information level — estimate_information","text":"","code":"# To be added"},{"path":"https://jbetz-jhu.github.io/impart/reference/example_1.html","id":null,"dir":"Reference","previous_headings":"","what":"Example 1: Simulated Trial with a Single, Continuous Outcome — example_1","title":"Example 1: Simulated Trial with a Single, Continuous Outcome — example_1","text":"Simulated data randomized trial four continuous outcomes obtained 30, 60, 90, 120 days post-randomization continuous baseline covariates. Simulated data randomized trial single, continuous outcome obtained post-randomization continuous baseline covariates.","code":""},{"path":"https://jbetz-jhu.github.io/impart/reference/example_1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example 1: Simulated Trial with a Single, Continuous Outcome — example_1","text":"","code":"example_1  example_1"},{"path":[]},{"path":"https://jbetz-jhu.github.io/impart/reference/example_1.html","id":"example-","dir":"Reference","previous_headings":"","what":"example_1","title":"Example 1: Simulated Trial with a Single, Continuous Outcome — example_1","text":"data frame 300 rows 15 columns: .id Participant ID x_1, x_2, x_3, x_4 Baseline Covariates 1-4 tx Binary treatment assignment (1 = Treatment; 0 = Control) y_1,y_2,y_3,y_4 Outcomes assessments 1-4 .enrollment_time Time study initiation randomization .t_1,.t_2,.t_3,.t_4 Study time assessments 1-4","code":""},{"path":"https://jbetz-jhu.github.io/impart/reference/example_1.html","id":"example--1","dir":"Reference","previous_headings":"","what":"example_1","title":"Example 1: Simulated Trial with a Single, Continuous Outcome — example_1","text":"data frame 368 rows 11 columns: id Participant ID treatment Treatment Assigned enrollment_time Time study initiation randomization x1, x2, x3, x4, x5 Baseline Covariates follow_up_time Time study initiation last study visit tx Binary treatment assignment (1 = Treatment; 0 = Control) y Primary outcome: higher values indicate better outcomes","code":""},{"path":"https://jbetz-jhu.github.io/impart/reference/example_1_final.html","id":null,"dir":"Reference","previous_headings":"","what":"Example 1: Simulated Trial with a Single, Continuous Outcome - Final Analysis — example_1_final","title":"Example 1: Simulated Trial with a Single, Continuous Outcome - Final Analysis — example_1_final","text":"Simulated data randomized trial four continuous outcomes obtained 30, 60, 90, 120 days post-randomization continuous baseline covariates. dataset contains data observed 1499 days since study initiation.","code":""},{"path":"https://jbetz-jhu.github.io/impart/reference/example_1_final.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example 1: Simulated Trial with a Single, Continuous Outcome - Final Analysis — example_1_final","text":"","code":"example_1_final"},{"path":[]},{"path":"https://jbetz-jhu.github.io/impart/reference/example_1_final.html","id":"example-final","dir":"Reference","previous_headings":"","what":"example_1_final","title":"Example 1: Simulated Trial with a Single, Continuous Outcome - Final Analysis — example_1_final","text":"data frame 239 rows 15 columns: .id Participant ID x_1, x_2, x_3, x_4 Baseline Covariates 1-4 tx Binary treatment assignment (1 = Treatment; 0 = Control) y_1, y_2, y_3, y_4 Outcomes assessments 1-4 .enrollment_time Time study initiation randomization .t_1,.t_2,.t_3,.t_4 Study time assessments 1-4","code":""},{"path":"https://jbetz-jhu.github.io/impart/reference/example_1_ia_1.html","id":null,"dir":"Reference","previous_headings":"","what":"Example 1: Simulated Trial with a Single, Continuous Outcome - Interim Analysis 1 — example_1_ia_1","title":"Example 1: Simulated Trial with a Single, Continuous Outcome - Interim Analysis 1 — example_1_ia_1","text":"Simulated data randomized trial four continuous outcomes obtained 30, 60, 90, 120 days post-randomization continuous baseline covariates. dataset contains data observed 788 days since study initiation.","code":""},{"path":"https://jbetz-jhu.github.io/impart/reference/example_1_ia_1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example 1: Simulated Trial with a Single, Continuous Outcome - Interim Analysis 1 — example_1_ia_1","text":"","code":"example_1_ia_1"},{"path":[]},{"path":"https://jbetz-jhu.github.io/impart/reference/example_1_ia_1.html","id":"example-ia-","dir":"Reference","previous_headings":"","what":"example_1_ia_1","title":"Example 1: Simulated Trial with a Single, Continuous Outcome - Interim Analysis 1 — example_1_ia_1","text":"data frame 134 rows 15 columns: .id Participant ID x_1, x_2, x_3, x_4 Baseline Covariates 1-4 tx Binary treatment assignment (1 = Treatment; 0 = Control) y_1, y_2, y_3, y_4 Outcomes assessments 1-4 .enrollment_time Time study initiation randomization .t_1,.t_2,.t_3,.t_4 Study time assessments 1-4","code":""},{"path":"https://jbetz-jhu.github.io/impart/reference/example_1_ia_2.html","id":null,"dir":"Reference","previous_headings":"","what":"Example 1: Simulated Trial with a Single, Continuous Outcome - Interim Analysis 2 — example_1_ia_2","title":"Example 1: Simulated Trial with a Single, Continuous Outcome - Interim Analysis 2 — example_1_ia_2","text":"Simulated data randomized trial four continuous outcomes obtained 30, 60, 90, 120 days post-randomization continuous baseline covariates. dataset contains data observed 1194 days since study initiation.","code":""},{"path":"https://jbetz-jhu.github.io/impart/reference/example_1_ia_2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example 1: Simulated Trial with a Single, Continuous Outcome - Interim Analysis 2 — example_1_ia_2","text":"","code":"example_1_ia_2"},{"path":[]},{"path":"https://jbetz-jhu.github.io/impart/reference/example_1_ia_2.html","id":"example-ia-","dir":"Reference","previous_headings":"","what":"example_1_ia_2","title":"Example 1: Simulated Trial with a Single, Continuous Outcome - Interim Analysis 2 — example_1_ia_2","text":"data frame 198 rows 15 columns: .id Participant ID x_1, x_2, x_3, x_4 Baseline Covariates 1-4 tx Binary treatment assignment (1 = Treatment; 0 = Control) y_1, y_2, y_3, y_4 Outcomes assessments 1-4 .enrollment_time Time study initiation randomization .t_1,.t_2,.t_3,.t_4 Study time assessments 1-4","code":""},{"path":"https://jbetz-jhu.github.io/impart/reference/impart-package.html","id":null,"dir":"Reference","previous_headings":"","what":"impart: Information Monitoring for Precision Adaptive Randomized Trials — impart-package","title":"impart: Information Monitoring for Precision Adaptive Randomized Trials — impart-package","text":"Software designing, monitoring, analyzing experiments covariate adjustment, including fixed sample size designs, group sequential designs interim assessments efficacy futility, well information monitoring designs (.e. designs whose sample size automatically adjusted precision accruing data). Analyses can include covariate adjustment can potentially improve power precision group sequential fixed sample size designs, shorten duration information monitored designs. Estimates can orthogonalized provide 'independent increments' assumption underpins valid use group sequential stopping boundaries.","code":""},{"path":[]},{"path":"https://jbetz-jhu.github.io/impart/reference/impart-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"impart: Information Monitoring for Precision Adaptive Randomized Trials — impart-package","text":"Maintainer: Josh Betz jbetz@jhu.edu (ORCID) Authors: Kelly Van Lancker kelly.vanlancker@ugent.(ORCID) Michael Rosenblum mrosen@jhu.edu (ORCID)","code":""},{"path":"https://jbetz-jhu.github.io/impart/reference/information_to_n.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert information level into an approximate sample size requirement for a one-stage design — information_to_n","title":"Convert information level into an approximate sample size requirement for a one-stage design — information_to_n","text":"functions provide asymptotic approximation information (.e. precision, inverse variance) provided two samples assumed values nuisance parameters continuous binary outcomes.","code":""},{"path":"https://jbetz-jhu.github.io/impart/reference/information_to_n.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert information level into an approximate sample size requirement for a one-stage design — information_to_n","text":"","code":"information_to_n_continuous_1_to_1(   information,   sigma_0,   sigma_1,   round_up = TRUE )  information_to_n_binary_1_to_1(   information,   pi_0 = NULL,   pi_1 = NULL,   delta = NULL,   round_up = TRUE )"},{"path":"https://jbetz-jhu.github.io/impart/reference/information_to_n.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert information level into an approximate sample size requirement for a one-stage design — information_to_n","text":"information Numeric vector containing information level sigma_0 Variance outcomes population individuals receiving control intervention sigma_1 Variance outcomes population individuals receiving active intervention round_up Logical scalar: sample size rounded integer value? pi_0 Probability event population individuals receiving control intervention pi_1 Probability event population individuals receiving control intervention delta risk difference (.e. pi_1 - pi_0)","code":""},{"path":"https://jbetz-jhu.github.io/impart/reference/information_to_n.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert information level into an approximate sample size requirement for a one-stage design — information_to_n","text":"parameters scalars, result scalar, indicating approximate sample size requirement. multiple values specified, grid unique parameters constructed, approximate information computed value parameters.","code":""},{"path":[]},{"path":"https://jbetz-jhu.github.io/impart/reference/information_to_n.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert information level into an approximate sample size requirement for a one-stage design — information_to_n","text":"","code":"# To add"},{"path":"https://jbetz-jhu.github.io/impart/reference/information_trajectory.html","id":null,"dir":"Reference","previous_headings":"","what":"Reconstruct a trajectory of information accrual — information_trajectory","title":"Reconstruct a trajectory of information accrual — information_trajectory","text":"estimate_information() provides estimated information level single point, investigators may want visualize trajectory quickly information accruing participants randomized outcomes obtained. information_trajectory attempts reconstruct study data available different points time, compute information accrued times. Regression models can used smooth trajectories provide projections information reach pre-specified thresholds.","code":""},{"path":"https://jbetz-jhu.github.io/impart/reference/information_trajectory.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reconstruct a trajectory of information accrual — information_trajectory","text":"","code":"information_trajectory(   prepared_data,   monitored_design = NULL,   estimation_function,   estimation_arguments,   correction_function = NULL,   orthogonalize,   n_min = 30,   n_increment = 5,   rng_seed,   control = monitored_analysis_control() )"},{"path":"https://jbetz-jhu.github.io/impart/reference/information_trajectory.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reconstruct a trajectory of information accrual — information_trajectory","text":"prepared_data prepeared dataset: see prepare_monitored_study_data monitored_design object class monitored_design created using initialize_monitored_design() estimation_function function whose arguments include data.frame named data estimation_arguments list additional arguments needed estimation_function correction_function optional function adjust variance estimate using parameters estimation_arguments orthogonalize Logical scalar: estimates, covariance, resulting test statistics orthogonalized? n_min numeric scalar indicating minimum sample size information trajectory n_increment numeric scalar indicating increment sample size calculating trajectory n_min current sample size prepared_data. rng_seed Numeric scalar containing L'Ecuyer pseudorandom number generator seed control list containing control arguments computation, typically created monitored_analysis_control()","code":""},{"path":"https://jbetz-jhu.github.io/impart/reference/information_trajectory.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reconstruct a trajectory of information accrual — information_trajectory","text":"data.frame containing information number outcome events analysis","code":""},{"path":"https://jbetz-jhu.github.io/impart/reference/information_trajectory.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reconstruct a trajectory of information accrual — information_trajectory","text":"","code":"# To be added"},{"path":"https://jbetz-jhu.github.io/impart/reference/initialize_monitored_design.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialize an Information Monitoring Design — initialize_monitored_design","title":"Initialize an Information Monitoring Design — initialize_monitored_design","text":"Rather planning data collection pre-specified sample size reached based estimates nuisance parameters, information-monitored study continues data collection provide sufficient precision identify meaningful difference appropriate power control Type Error. design specified terms information level rather fixed sample size, recruitment stopped accrued participants projected meet required level precision test hypotheses interest. function creates object encapsulates aspects study design must specified advance, sequential analysis plan, value estimand null, maximum sample size allowed enrolled recruitment automatically suspended, target information level, whether test statistics orthogonalized, pseudorandom number generator seeds used analyses.","code":""},{"path":"https://jbetz-jhu.github.io/impart/reference/initialize_monitored_design.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialize an Information Monitoring Design — initialize_monitored_design","text":"","code":"initialize_monitored_design(   trial_design,   null_value = NULL,   maximum_sample_size,   information_target,   orthogonalize,   rng_seed_analysis )"},{"path":"https://jbetz-jhu.github.io/impart/reference/initialize_monitored_design.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initialize an Information Monitoring Design — initialize_monitored_design","text":"trial_design object type trialDesignGroupSequential created rpact::getDesignGroupSequential() containing group sequential design specification null_value Numeric scalar containing value estimand null hypothesis, e.g. 0 differences 1 ratios maximum_sample_size Numeric scalar containing maximum sample size recruitment stopped already stopped information monitoring. information_target numeric scalar containing information level information monitored design created using required_information_single_stage() adjusted multiplicity using required_information_sequential() orthogonalize Logical scalar: estimates, covariance, resulting test statistics orthogonalized? rng_seed_analysis Numeric scalar containing L'Ecuyer pseudorandom number generator seed used analyses specified trial_design","code":""},{"path":"https://jbetz-jhu.github.io/impart/reference/initialize_monitored_design.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initialize an Information Monitoring Design — initialize_monitored_design","text":"\"monitored design\" object used several impart functions.","code":""},{"path":"https://jbetz-jhu.github.io/impart/reference/initialize_monitored_design.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Initialize an Information Monitoring Design — initialize_monitored_design","text":"","code":"# To be added"},{"path":"https://jbetz-jhu.github.io/impart/reference/monitored_analysis.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform pre-specified analyses for an interim monitored trial design — monitored_analysis","title":"Perform pre-specified analyses for an interim monitored trial design — monitored_analysis","text":"Perform pre-specified analyses interim monitored trial design","code":""},{"path":"https://jbetz-jhu.github.io/impart/reference/monitored_analysis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform pre-specified analyses for an interim monitored trial design — monitored_analysis","text":"","code":"monitored_analysis(   data,   monitored_design = NULL,   estimation_function,   estimation_arguments,   correction_function = NULL,   control = monitored_analysis_control(),   ... )"},{"path":"https://jbetz-jhu.github.io/impart/reference/monitored_analysis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform pre-specified analyses for an interim monitored trial design — monitored_analysis","text":"data data.frame containing data analyzed. column named .id indicates observations correspond individual. monitored_design object class monitored_design created using initialize_monitored_design() estimation_function function whose arguments include data.frame named data estimation_arguments list additional arguments needed estimation_function correction_function function takes arguments supplied estimation_function returns numeric scalar performs small sample correction variance estimate control list containing control arguments computation, typically created monitored_analysis_control() ... Additional arguments, currently ignored","code":""},{"path":"https://jbetz-jhu.github.io/impart/reference/monitored_analysis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform pre-specified analyses for an interim monitored trial design — monitored_analysis","text":"object class monitored_design","code":""},{"path":"https://jbetz-jhu.github.io/impart/reference/monitored_analysis.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform pre-specified analyses for an interim monitored trial design — monitored_analysis","text":"","code":"# To be added"},{"path":"https://jbetz-jhu.github.io/impart/reference/monitored_analysis_control.html","id":null,"dir":"Reference","previous_headings":"","what":"Control arguments for performing information monitored analyses — monitored_analysis_control","title":"Control arguments for performing information monitored analyses — monitored_analysis_control","text":"provides way set modify analysis parameters information monitoring.","code":""},{"path":"https://jbetz-jhu.github.io/impart/reference/monitored_analysis_control.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Control arguments for performing information monitored analyses — monitored_analysis_control","text":"","code":"monitored_analysis_control(   orthogonal_and_oblique = FALSE,   required_packages = character(0),   n_bootstrap = 1000,   n_cores = 1,   use_load_balancing = FALSE )  monitored_analysis_control_testing(   orthogonal_and_oblique = FALSE,   required_packages = character(0),   n_bootstrap = 250,   n_cores = 1,   use_load_balancing = FALSE )"},{"path":"https://jbetz-jhu.github.io/impart/reference/monitored_analysis_control.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Control arguments for performing information monitored analyses — monitored_analysis_control","text":"orthogonal_and_oblique logical scalar: orthogonal == TRUE non-orthogonalized (oblique) test statistics decisions returned? required_packages character vector required packages loaded cluster: used n_cores > 1. n_bootstrap Scalar number containing number bootstrap replicates perform n_cores Scalar number cores use. use_load_balancing Logical scalar: load balancing used?","code":""},{"path":"https://jbetz-jhu.github.io/impart/reference/monitored_analysis_control.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Control arguments for performing information monitored analyses — monitored_analysis_control","text":"list containing default parameters supplied alternatives.","code":""},{"path":[]},{"path":"https://jbetz-jhu.github.io/impart/reference/monitored_analysis_control.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Control arguments for performing information monitored analyses — monitored_analysis_control","text":"","code":"# To be added"},{"path":"https://jbetz-jhu.github.io/impart/reference/monitored_design_checks.html","id":null,"dir":"Reference","previous_headings":"","what":"Check consistency of a monitored_design object — monitored_design_checks","title":"Check consistency of a monitored_design object — monitored_design_checks","text":"Check consistency monitored_design object","code":""},{"path":"https://jbetz-jhu.github.io/impart/reference/monitored_design_checks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check consistency of a monitored_design object — monitored_design_checks","text":"","code":"monitored_design_checks(   data,   monitored_design = NULL,   estimation_function,   estimation_arguments,   correction_function = NULL )"},{"path":"https://jbetz-jhu.github.io/impart/reference/monitored_design_checks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check consistency of a monitored_design object — monitored_design_checks","text":"data data.frame containing data analyzed. column named .id indicates observations correspond individual. monitored_design object class monitored_design created using initialize_monitored_design() estimation_function function whose arguments include data.frame named data estimation_arguments list additional arguments needed estimation_function correction_function function takes arguments supplied estimation_function returns numeric scalar performs small sample correction variance estimate","code":""},{"path":"https://jbetz-jhu.github.io/impart/reference/monitored_design_checks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check consistency of a monitored_design object — monitored_design_checks","text":"result returned.","code":""},{"path":"https://jbetz-jhu.github.io/impart/reference/monitored_design_checks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check consistency of a monitored_design object — monitored_design_checks","text":"","code":"# To be added"},{"path":"https://jbetz-jhu.github.io/impart/reference/mw_from_pmfs.html","id":null,"dir":"Reference","previous_headings":"","what":"Title Compute the Mann-Whitney estimand from Probability Mass Functions — mw_from_pmfs","title":"Title Compute the Mann-Whitney estimand from Probability Mass Functions — mw_from_pmfs","text":"Mann-Whitney estimand tie-adjusted probability randomly selected individual population treated individuals outcome higher outcome category level randomly selected individual population control individuals.","code":""},{"path":"https://jbetz-jhu.github.io/impart/reference/mw_from_pmfs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title Compute the Mann-Whitney estimand from Probability Mass Functions — mw_from_pmfs","text":"","code":"mw_from_pmfs(pmf_0, pmf_1, reverse_scale = FALSE)"},{"path":"https://jbetz-jhu.github.io/impart/reference/mw_from_pmfs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title Compute the Mann-Whitney estimand from Probability Mass Functions — mw_from_pmfs","text":"pmf_0 vector containing PMF outcomes control population, .e. Pr(Y = 1 | = 0), Pr(Y = 2 | = 0), ... pmf_1 vector containing PMF outcomes treated population, .e. Pr(Y = 1 | = 1), Pr(Y = 2 | = 1), ... reverse_scale (Scalar: Logical) scales reversed calculating Mann-Whitney estimand? may useful lower categories indicate preferable outcome.","code":""},{"path":"https://jbetz-jhu.github.io/impart/reference/mw_from_pmfs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title Compute the Mann-Whitney estimand from Probability Mass Functions — mw_from_pmfs","text":"scalar containing Mann-Whitney Estimand","code":""},{"path":"https://jbetz-jhu.github.io/impart/reference/mw_from_pmfs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Title Compute the Mann-Whitney estimand from Probability Mass Functions — mw_from_pmfs","text":"","code":"mw_from_pmfs(   pmf_0 = c(0.1, 0.1, 0.2, 0.6),   pmf_1 = c(0.2, 0.2, 0.3, 0.3) ) #> [1] 0.34  mw_from_pmfs(   pmf_0 = c(0.1, 0.1, 0.2, 0.6),   pmf_1 = c(0.2, 0.2, 0.3, 0.3),   reverse_scale = TRUE ) #> [1] 0.66"},{"path":"https://jbetz-jhu.github.io/impart/reference/orthogonalize_estimates.html","id":null,"dir":"Reference","previous_headings":"","what":"Orthogonalize estimates and covariance matrix — orthogonalize_estimates","title":"Orthogonalize estimates and covariance matrix — orthogonalize_estimates","text":"Orthogonalize estimates covariance matrix","code":""},{"path":"https://jbetz-jhu.github.io/impart/reference/orthogonalize_estimates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Orthogonalize estimates and covariance matrix — orthogonalize_estimates","text":"","code":"orthogonalize_estimates(estimates, covariance)"},{"path":"https://jbetz-jhu.github.io/impart/reference/orthogonalize_estimates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Orthogonalize estimates and covariance matrix — orthogonalize_estimates","text":"estimates numeric vector estimates covariance numeric matrix whose number rows columns equal length estimates","code":""},{"path":"https://jbetz-jhu.github.io/impart/reference/orthogonalize_estimates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Orthogonalize estimates and covariance matrix — orthogonalize_estimates","text":"list containing orthogonalized estimates covariance matrix.","code":""},{"path":"https://jbetz-jhu.github.io/impart/reference/orthogonalize_estimates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Orthogonalize estimates and covariance matrix — orthogonalize_estimates","text":"","code":"# To be added"},{"path":"https://jbetz-jhu.github.io/impart/reference/plot_outcome_counts.html","id":null,"dir":"Reference","previous_headings":"","what":"Produce a cumulative plot of study events — plot_outcome_counts","title":"Produce a cumulative plot of study events — plot_outcome_counts","text":"appropriate analysis must take account amount data available analysis. continuous outcomes, may involve number individuals baseline covariates primary outcomes, binary time events may additionally depend number observed events. plot_outcome_counts provides way visualize amount data available analysis.","code":""},{"path":"https://jbetz-jhu.github.io/impart/reference/plot_outcome_counts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Produce a cumulative plot of study events — plot_outcome_counts","text":"","code":"plot_outcome_counts(   prepared_data,   study_time = NULL,   type = \"tc\",   count_increment = 10,   time_increment = 30,   color_palette = NULL )"},{"path":"https://jbetz-jhu.github.io/impart/reference/plot_outcome_counts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Produce a cumulative plot of study events — plot_outcome_counts","text":"prepared_data prepeared dataset: see prepare_monitored_study_data study_time numeric scalar indicating study time data reconstructed events counted type character scalar containing \"t\" total number observations, \"c\" number complete observations, \"e\" number events (time--event binary outcomes) count_increment Plots horizontal lines regular increments assist reading counts. count_increment numeric scalar indicating increment horizontal lines count axis. time_increment Plots horizontal lines regular increments assist reading counts. time_increment numeric scalar indicating increment vertical lines time axis. color_palette vector colors event.","code":""},{"path":"https://jbetz-jhu.github.io/impart/reference/plot_outcome_counts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Produce a cumulative plot of study events — plot_outcome_counts","text":"","code":"# To be added"},{"path":"https://jbetz-jhu.github.io/impart/reference/prepare_monitored_study_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare monitored study data for monitoring and analysis — prepare_monitored_study_data","title":"Prepare monitored study data for monitoring and analysis — prepare_monitored_study_data","text":"Prepare monitored study data monitoring analysis","code":""},{"path":"https://jbetz-jhu.github.io/impart/reference/prepare_monitored_study_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare monitored study data for monitoring and analysis — prepare_monitored_study_data","text":"","code":"prepare_monitored_study_data(   data,   study_time,   id_variable,   covariates_variables,   enrollment_time_variable,   treatment_variable,   outcome_variables,   outcome_time_variables,   observe_missing_times,   outcomes_sequential = TRUE,   time_to_event = FALSE )"},{"path":"https://jbetz-jhu.github.io/impart/reference/prepare_monitored_study_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare monitored study data for monitoring and analysis — prepare_monitored_study_data","text":"data data.frame containing baseline covariates, treatment assignment, randomization time, observed outcomes, times outcome assessments. study_time numeric scalar indicating time study initiation export data (latest observed event, randomization participants outcome ascertainment). id_variable character scalar containing column name study participant identifier. covariates_variables character vector containing column names covariates outcomes observed prior randomization. enrollment_time_variable character scalar containing column name enrollment/randomization time variable. treatment_variable character scalar containing column name binary treatment assignment variable. outcome_variables character vector containing column names outcomes observed randomization. outcome_time_variables character vector containing column names observation times outcomes observed randomization. observe_missing_times numeric vector containing outcomes_sequential logical scalar: outcomes sequential nature (e.g. sequence study visits) (e.g. times randomization different events)? time_to_event logical scalar: outcomes times randomization events (TRUE) continuous, binary, ordinal outcome (FALSE)?","code":""},{"path":"https://jbetz-jhu.github.io/impart/reference/prepare_monitored_study_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare monitored study data for monitoring and analysis — prepare_monitored_study_data","text":"list containing prepared data, original data, variables specified .","code":""},{"path":"https://jbetz-jhu.github.io/impart/reference/prepare_monitored_study_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepare monitored study data for monitoring and analysis — prepare_monitored_study_data","text":"","code":"# To be added"},{"path":"https://jbetz-jhu.github.io/impart/reference/relabel_by_id.html","id":null,"dir":"Reference","previous_headings":"","what":"Create relabeled dataset from a list of resampled IDs — relabel_by_id","title":"Create relabeled dataset from a list of resampled IDs — relabel_by_id","text":"internal function used calculate_covariance bootstrapping data may either wide format (.e. one row per individual) long format (.e. one row per study visit per individual). function takes list resampled IDs, retrieves rows data corresponding IDs, creates unique ID preserves nesting structure long format data.","code":""},{"path":"https://jbetz-jhu.github.io/impart/reference/relabel_by_id.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create relabeled dataset from a list of resampled IDs — relabel_by_id","text":"","code":"relabel_by_id(data, ids, resample = FALSE, convert_id_to_factor = TRUE)"},{"path":"https://jbetz-jhu.github.io/impart/reference/relabel_by_id.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create relabeled dataset from a list of resampled IDs — relabel_by_id","text":"data data.frame resampled, must contain column named .id uniquely identifies rows corresponding individual. ids vector IDs already resampled data resample Logical scalar: IDs resampled computing bootstrap replicate list unique IDs? convert_id_to_factor Logical scalar: ID column converted factor?","code":""},{"path":"https://jbetz-jhu.github.io/impart/reference/relabel_by_id.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create relabeled dataset from a list of resampled IDs — relabel_by_id","text":"data.frame containing resampled data unique values .id.","code":""},{"path":"https://jbetz-jhu.github.io/impart/reference/relabel_by_id.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create relabeled dataset from a list of resampled IDs — relabel_by_id","text":"original data must column named .id identifies rows data belong individual. new value .id created resulting data, preserving nesting structure long data.","code":""},{"path":"https://jbetz-jhu.github.io/impart/reference/relabel_by_id.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create relabeled dataset from a list of resampled IDs — relabel_by_id","text":"","code":"# To be added"},{"path":"https://jbetz-jhu.github.io/impart/reference/required_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine the information level required for a one-stage, fixed sample size design — required_info","title":"Determine the information level required for a one-stage, fixed sample size design — required_info","text":"information monitored designs, data accrued information (.e. precision) reaches level required achieve desired power testing null hypothesis specific alternative maintaining specified Type Error Rate. required_information_uninflated_mann_whitney alias required_information_single_stage ordinal outcomes, null value Mann-Whitney estimand 0.5.","code":""},{"path":"https://jbetz-jhu.github.io/impart/reference/required_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine the information level required for a one-stage, fixed sample size design — required_info","text":"","code":"required_information_single_stage(   delta,   delta_0 = 0,   alpha = 0.05,   sides = 2,   power = 0.8 )  required_information_mw_single_stage(mw, alpha = 0.05, sides = 2, power = 0.8)"},{"path":"https://jbetz-jhu.github.io/impart/reference/required_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determine the information level required for a one-stage, fixed sample size design — required_info","text":"delta Numeric vector containing estimand alternative hypothesis delta_0 Numeric vector containing estimand null hypothesis alpha Desired Type Error Rate test sides (Scalar - 1 2): Type Test, either 1-sided 2-sided. power Desired power test (1 - Type II Error Rate) mw Numeric vector containing estimand alternative hypothesis: value Mann-Whitney null always 0.5.","code":""},{"path":"https://jbetz-jhu.github.io/impart/reference/required_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Determine the information level required for a one-stage, fixed sample size design — required_info","text":"parameters scalars, result scalar, indicating required information. multiple values specified, grid unique parameters constructed, required information computed value parameters.","code":""},{"path":[]},{"path":"https://jbetz-jhu.github.io/impart/reference/required_info.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Determine the information level required for a one-stage, fixed sample size design — required_info","text":"","code":"# When a single value is supplied for each parameter, a scalar is returned: required_information_single_stage(   delta = 5,   delta_0 = 0,   alpha = 0.05,   sides = 2,   power = 0.8 ) #> [1] 0.3139552  # When multiple values are supplied for one or more parameters, the grid of # parameters are created, and a data.frame is returned. required_information_single_stage(   delta = c(5, 7.5),   delta_0 = 0,   alpha = 0.05,   sides = 2,   power = c(0.8, 0.9) ) #>   delta delta_0 alpha sides power information #> 1   5.0       0  0.05     2   0.8   0.3139552 #> 2   7.5       0  0.05     2   0.8   0.1395356 #> 3   5.0       0  0.05     2   0.9   0.4202969 #> 4   7.5       0  0.05     2   0.9   0.1867986"},{"path":"https://jbetz-jhu.github.io/impart/reference/required_information_sequential.html","id":null,"dir":"Reference","previous_headings":"","what":"Adjust Information for Interim Monitoring — required_information_sequential","title":"Adjust Information for Interim Monitoring — required_information_sequential","text":"Group Sequential Design methods can control Familywise Type Error (FWER) due multiple assessments efficacy. method used adjust sample size single stage design account multiplicity can also used adjust information level information monitored design.","code":""},{"path":"https://jbetz-jhu.github.io/impart/reference/required_information_sequential.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adjust Information for Interim Monitoring — required_information_sequential","text":"","code":"required_information_sequential(information_single_stage, trial_design)"},{"path":"https://jbetz-jhu.github.io/impart/reference/required_information_sequential.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adjust Information for Interim Monitoring — required_information_sequential","text":"information_single_stage numeric scalar containing information level information monitored design single efficacy analysis, created using required_information_single_stage() trial_design object type trialDesignGroupSequential created rpact::getDesignGroupSequential() containing group sequential design specification","code":""},{"path":"https://jbetz-jhu.github.io/impart/reference/required_information_sequential.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adjust Information for Interim Monitoring — required_information_sequential","text":"scalar information level accounts pre-planned analyses specified gsd_design_specification","code":""},{"path":[]},{"path":"https://jbetz-jhu.github.io/impart/reference/required_information_sequential.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Adjust Information for Interim Monitoring — required_information_sequential","text":"","code":"# To be added"},{"path":"https://jbetz-jhu.github.io/impart/reference/standardization.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute stanadardization (i.e. G-Computation) estimator — standardization","title":"Compute stanadardization (i.e. G-Computation) estimator — standardization","text":"Computes estimate contrast means continuous binary outcomes additive scale, relative scale. Computing marginal odds ratio also possible binary outcomes.","code":""},{"path":"https://jbetz-jhu.github.io/impart/reference/standardization.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute stanadardization (i.e. G-Computation) estimator — standardization","text":"","code":"standardization(   data,   estimand = \"difference\",   y0_formula,   y1_formula,   family,   treatment_column = NULL,   outcome_indicator_column = NULL )  standardization_correction(   data,   y0_formula,   y1_formula,   treatment_column,   outcome_indicator_column )"},{"path":"https://jbetz-jhu.github.io/impart/reference/standardization.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute stanadardization (i.e. G-Computation) estimator — standardization","text":"data data.frame containing baseline covariates (e.g. x1, x2, ...), binary treatment indicator (e.g. tx 1 = Treatment; 0 = Control), outcome variables (e.g. y1, y2, ...), outcome indicators (e.g. .r_1, .r_2, ...). outcome indicators indicate whether outcome observed (1), missing (0), yet obtained (NA). estimand character scalar: \"difference\" (difference means risk difference), \"ratio\" (ratio means relative risk), \"oddsratio\" (odds ratio binary outcome). y0_formula stats::formula specifying relationship outcome covariates control arm. y1_formula stats::formula specifying relationship outcome covariates treatment arm. family stats::family outcome regression model treatment_column character scalar indicating column containing treatment indicator. outcome_indicator_column character scalar indicating column containing outcome indicator corresponding treatment_column.","code":""},{"path":"https://jbetz-jhu.github.io/impart/reference/standardization.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute stanadardization (i.e. G-Computation) estimator — standardization","text":"list containing marginal means contrast:","code":""},{"path":"https://jbetz-jhu.github.io/impart/reference/standardization.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute stanadardization (i.e. G-Computation) estimator — standardization","text":"Generalized linear models, stratified treatment arm, fitted using specified formulas. Predictions generated individual treatment model, representing predicted outcome treatment assignment. predictions marginalized covariates averaging produce marginal estimates means. Finally, contrast computed returned. Variance estimates can obtained using nonparametric bootstrap. Unadjusted estimates can obtained using intercept models.","code":""},{"path":"https://jbetz-jhu.github.io/impart/reference/standardization.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute stanadardization (i.e. G-Computation) estimator — standardization","text":"","code":"ex_1 <- example_1 ex_1$.r_4 <- 1*(!is.na(ex_1$y_4))  standardization(   data = ex_1,   estimand = \"difference\",   y0_formula = y_4 ~ x_1 + x_2 + x_3 + x_4,   y1_formula = y_4 ~ x_1 + x_2 + x_3 + x_4,   family = gaussian,   treatment_column = \"tx\",   outcome_indicator_column = \".r_4\" ) #> $estimate #> [1] 3.399756 #>  #> $y1_pred #>            1            2            3            4            5            6  #> -0.297051858  5.073109474 11.436194287 -2.513249148  8.465807942  2.964424727  #>            7            8            9           10           11           12  #>  1.329629699  3.702978369  0.583497314  8.278725911  2.066010821  7.574220209  #>           13           14           15           16           17           18  #>  8.059079706 -0.237060205  4.512008648  7.886628113  6.819003744 12.488891547  #>           19           20           21           22           23           24  #> -4.396487588  7.980101994  7.835935773  9.386694433  9.600527704 11.345502540  #>           25           26           27           28           29           30  #>  7.526925700  6.570070999  1.195479206 14.197233167 -3.740726868 -1.054410797  #>           31           32           33           34           35           36  #>  0.377046558 -1.359020248  8.341046638 -0.760193888 12.095957376  0.827557407  #>           37           38           39           40           41           42  #>  1.142987383 11.365537427  4.394520750  4.846709061  0.671176472  4.866668537  #>           43           44           45           46           47           48  #> 16.669510919 -0.535484097  4.724423653 10.453155535  2.182827822  3.646232219  #>           49           50           51           52           53           54  #>  2.554949396  8.415424213 -1.629085444  6.212956673  9.707494802  3.402470267  #>           55           56           57           58           59           60  #>  3.298780017 -0.023389418  6.282669269 15.002882674  9.016259072 -2.120883320  #>           61           62           63           64           65           66  #> 13.584155206  7.972138009 -0.327298990 -5.859776104  7.799248530  7.930315974  #>           67           68           69           70           71           72  #>  2.081842180  4.647729974 10.603181547  4.322683208  2.980861237 -0.293104870  #>           73           74           75           76           77           78  #>  4.345600417  5.353470291  9.491364566 -2.483042959  8.060922454 -2.848809088  #>           79           80           81           82           83           84  #>  1.267695476 13.892626118  6.873781113  1.565514694  4.927546594 12.779692123  #>           85           86           87           88           89           90  #>  7.406749570  6.259928006  5.821015519 -0.024263548  2.405295153  1.954568986  #>           91           92           93           94           95           96  #>  4.966503078 10.680288450 -5.617376258  1.819708761 16.075819981 -0.621160094  #>           97           98           99          100          101          102  #>  1.647365497  6.232268535  1.534085623 10.492200443  1.941639089  0.009062318  #>          103          104          105          106          107          108  #>  6.203182538  5.917814244  4.512744743  1.960211105  5.438448585 -4.644893491  #>          109          110          111          112          113          114  #> -1.874170408  4.169962197 11.774180178  0.183018732  4.555624627  4.798871160  #>          115          116          117          118          119          120  #>  3.293412932 11.219324718  3.828292949  5.184923919 -0.312499263  9.921262066  #>          121          122          123          124          125          126  #>  0.066305387  6.464671612  4.189741786  6.429775707  4.473312531  2.494016113  #>          127          128          129          130          131          132  #>  8.227636162 -7.004591693  0.540755008  8.772332355 12.036693094  3.892001708  #>          133          134          135          136          137          138  #>  1.050136975 -3.447485624  9.631010062  1.792401265  3.927341604  2.658138653  #>          139          140          141          142          143          144  #>  6.690208421  3.510519788 -2.060464142 10.545740886  2.188605527  6.912954393  #>          145          146          147          148          149          150  #>  3.190863622 15.563077802 -8.111077566  4.980135539  6.654453568  3.383329118  #>          151          152          153          154          155          156  #>  6.479447591 -0.140368080  5.345597596 14.352718616  4.372367694 -3.415367654  #>          157          158          159          160          161          162  #>  4.834836311 -1.210974845 -6.904389433  2.476945936 10.691536736  9.180756844  #>          163          164          165          166          167          168  #>  3.190953103  5.192707152  7.222875013 12.109275000  8.629434159  5.653633237  #>          169          170          171          172          173          174  #> 13.294147211 13.248027476 -0.351326842  1.489021483  8.699858133  8.620943622  #>          175          176          177          178          179          180  #>  3.331467295 14.777410595  0.277646771  9.478067915  4.690259698  9.861443414  #>          181          182          183          184          185          186  #> 13.982665208 10.763437242  7.408329690  2.823376601  7.324778154  1.050275620  #>          187          188          189          190          191          192  #>  9.031491318 -0.431978558  5.097501235 -3.373953668  7.876481276  7.259143858  #>          193          194          195          196          197          198  #>  5.032283175  5.279436795  6.506435284  2.346482216  9.915531027 -2.351233753  #>          199          200          201          202          203          204  #>  6.528750998  1.765941582 11.989494540 13.762651635  4.943060599 -1.133975437  #>          205          206          207          208          209          210  #>  7.191147083 -0.301078619  5.603496348 10.481670093 10.371049987  4.612870111  #>          211          212          213          214          215          216  #>  3.643203539  4.367922314  5.660704335  4.484621594 12.710301520  3.100211616  #>          217          218          219          220          221          222  #> 12.647356672 -4.828054373  8.092643731  0.955353160  1.649256417 16.892977209  #>          223          224          225          226          227          228  #>  7.802017587 10.343180665  7.086627365 14.547013540 -4.053265589  0.696517564  #>          229          230          231          232          233          234  #> 12.426849180 -6.093232309 10.341036368  3.505514343  7.683300971 11.814084974  #>          235          236          237          238          239          240  #>  0.207818521 12.584715101  4.300786546 -2.736527721  7.859595526 11.123626763  #>          241          242          243          244          245          246  #> 10.223281729 19.108704235  9.357019868 -4.541704580  7.076749565  6.782784202  #>          247          248          249          250          251          252  #>  5.381955674 11.149902643 -2.802809197  1.342226120  4.909787615 -2.122455165  #>          253          254          255          256          257          258  #>  8.348697027  8.613037844  0.366674423  5.013208899 10.198756563  3.169252497  #>          259          260          261          262          263          264  #>  4.266800291  5.777463823  5.338778691  3.656025911  3.555998749  8.706774792  #>          265          266          267          268          269          270  #> 12.538376494 10.982582713 11.788257900  4.233066916 10.531578258  5.021019152  #>          271          272          273          274          275          276  #> -2.911129593 11.189336499  2.821315525  4.408168484  6.583162083  1.511252190  #>          277          278          279          280          281          282  #>  7.405094967  2.472301493  6.704306689  1.121372912  2.332754030  6.475399590  #>          283          284          285          286          287          288  #>  7.007579616 11.135455013  4.892699046  9.041922065 13.987596523  7.579622103  #>          289          290          291          292          293          294  #> 11.148506324  1.621183777 -1.974476193 -0.531407174  3.615686540  6.449567856  #>          295          296          297          298          299          300  #>  5.547206755  5.655709394  9.554970645 10.811082968  4.888080095  4.345795222  #>  #> $y0_pred #>            1            2            3            4            5            6  #>   0.29513801   1.45051208   6.57681738  -4.93329026   4.15647654  -0.56341465  #>            7            8            9           10           11           12  #>   1.60851871  -0.26771424  -4.75730987   4.19768331   0.97506743   7.54440913  #>           13           14           15           16           17           18  #>   5.06705080   1.18663014   0.94411379   5.75660204   2.49123485   7.13545396  #>           19           20           21           22           23           24  #>  -5.78415572   4.78129418   3.47565019   7.03572879   1.51399934   4.67492510  #>           25           26           27           28           29           30  #>   0.83985663  -1.42007878  -4.50526832   9.18472878  -6.69306748  -5.31330550  #>           31           32           33           34           35           36  #>  -2.78640260  -2.10695699   2.44961903  -5.05738667   5.12879051  -2.70333559  #>           37           38           39           40           41           42  #>  -0.66327583   4.64486556   2.87718646   3.70495234  -0.61526473   5.65676039  #>           43           44           45           46           47           48  #>  11.00417427  -6.00953265   2.77973457   6.88433822  -1.85433187  -0.27945891  #>           49           50           51           52           53           54  #>  -3.05379510   4.25352252  -3.20499786   5.09565144   5.90733778   1.01392810  #>           55           56           57           58           59           60  #>   1.36936532  -4.34068705   3.29352698  11.70782895   4.13649440  -5.35507918  #>           61           62           63           64           65           66  #>   8.72578102   3.70370295  -1.85300954  -8.45537717   5.34758574   1.91878595  #>           67           68           69           70           71           72  #>  -1.70826561   0.07570689   7.48480813   1.85693824  -0.38483276   0.13627150  #>           73           74           75           76           77           78  #>   1.16053478   3.47115272   1.03550429  -3.12468960   4.84205590  -6.18832432  #>           79           80           81           82           83           84  #>  -1.72550637   7.63395837   4.04394423   0.45469142  -0.35145691   6.38846000  #>           85           86           87           88           89           90  #>   7.27242203   1.09759623   0.05137633   1.09083878  -4.75181375   0.81946330  #>           91           92           93           94           95           96  #>   1.01321302   6.90157980  -8.55652105  -1.86535376   9.85114151  -4.08795173  #>           97           98           99          100          101          102  #>  -2.10031500   1.24401020   1.33165360   5.59539780  -1.05439557  -1.96659194  #>          103          104          105          106          107          108  #>   0.41480786   2.74166317   0.73071674   0.30436064   2.27367607  -6.61314037  #>          109          110          111          112          113          114  #>  -0.89599499  -0.20330360   5.81101171  -3.05021205  -0.67521906   0.80078768  #>          115          116          117          118          119          120  #>  -1.32762460  10.07252300   2.46584354   1.47034863  -5.96461749   4.33255630  #>          121          122          123          124          125          126  #>  -4.09948579   0.92958960   0.05852662   3.28598045  -1.53979917  -2.44531235  #>          127          128          129          130          131          132  #>   3.50344872 -12.49873363  -2.14322463   6.81314831  11.13074286   3.69212011  #>          133          134          135          136          137          138  #>  -5.12119742  -8.58705562   4.77696161  -1.71478672   2.77732028   2.22848469  #>          139          140          141          142          143          144  #>   1.99015797  -1.07740918  -6.38001586   5.52079333  -0.52429451   3.69931867  #>          145          146          147          148          149          150  #>  -0.35692891  11.30888544 -10.52703528  -1.80784264  -2.28888244  -0.95978005  #>          151          152          153          154          155          156  #>   5.15496126  -2.52551468   6.61972938   7.88454578   4.77774187  -7.58697832  #>          157          158          159          160          161          162  #>   0.74645659  -3.02234522  -9.57140842   1.62330545  10.83617353   8.04593929  #>          163          164          165          166          167          168  #>   0.00540188   1.47499597   2.05039690   4.69580168   6.75383173   0.39454606  #>          169          170          171          172          173          174  #>  10.97392026  10.96747338  -5.57558637  -2.58984960   5.78308649   4.69317793  #>          175          176          177          178          179          180  #>   1.74953285  11.63069271  -2.47866937   6.32125310   1.18294243   5.03115514  #>          181          182          183          184          185          186  #>   9.63406596   4.76170308   4.72386736   0.76376851   5.10532146  -1.87160296  #>          187          188          189          190          191          192  #>   5.87004065   0.88018560   0.22305278  -3.23233355   2.52219555   2.03135409  #>          193          194          195          196          197          198  #>   1.85823043   0.11754956   5.95018371   0.57749290   4.08253360  -8.77234401  #>          199          200          201          202          203          204  #>   5.01288235  -1.47972041   6.66502776  10.82874977  -0.02579330  -1.57341093  #>          205          206          207          208          209          210  #>   7.41480659  -3.54379525   1.04831493   8.59029347   5.54286099  -2.76193619  #>          211          212          213          214          215          216  #>  -0.19284239   3.66866794   6.05184017   4.67161686   7.65418030  -1.53331001  #>          217          218          219          220          221          222  #>   5.58780770  -6.90396483   3.21730215  -2.07078451   1.44759837  11.11253031  #>          223          224          225          226          227          228  #>  10.73952458   8.91710642   6.34378213   8.46527232  -0.69989084   0.50470181  #>          229          230          231          232          233          234  #>  11.25943897  -9.01745879   9.98069698  -1.67386944   2.24913944   9.01335133  #>          235          236          237          238          239          240  #>  -1.62299312   4.41368280   0.96572540  -6.93429093   3.29534392   4.22569843  #>          241          242          243          244          245          246  #>  10.00835908  13.63335087   3.69194364  -5.67939763   4.48772560   0.20868586  #>          247          248          249          250          251          252  #>   3.19513255   4.42626429  -2.40670417   0.59439782  -0.56444748  -3.57192431  #>          253          254          255          256          257          258  #>   6.26010046   3.40296339   1.45202589   1.86749164   6.22368611   0.81010813  #>          259          260          261          262          263          264  #>   1.53427166   4.53642209   1.86092392  -0.96780156  -0.20685046   3.65736988  #>          265          266          267          268          269          270  #>   3.84428540   5.05587961  10.11964544   3.30958026   6.51819972   1.74112267  #>          271          272          273          274          275          276  #>  -7.28027170   7.97135050  -1.35208037  -1.35594062   4.90411480  -1.58385498  #>          277          278          279          280          281          282  #>   4.32767736  -1.24098224   2.44845522  -2.48756366  -0.72164870  -0.67771463  #>          283          284          285          286          287          288  #>   4.81845962   6.68136224   1.13089909   3.94423628   8.13967283   1.54679639  #>          289          290          291          292          293          294  #>   6.92826722   0.54854995  -1.12398015  -4.45525658  -4.93959840   3.99151710  #>          295          296          297          298          299          300  #>   2.09538416   4.07907836   5.89236185  10.11967178   0.11747174   3.84806477  #>  #> attr(,\"class\") #> [1] \"standardization\""},{"path":"https://jbetz-jhu.github.io/impart/reference/test_data.html","id":null,"dir":"Reference","previous_headings":"","what":"test_data: A dataset used for testing package functions — test_data","title":"test_data: A dataset used for testing package functions — test_data","text":"data.frame contains two time event outcomes two numeric outcomes, used internal testing purposes. Enrollment time starts day 0, two individuals enrolled per day. event time first event ceiling participant ID divided 2. event time second event participant ID multiplied 2. outcome time numeric outcome equal participant ID, second outcome time always 5 greater first outcome time.","code":""},{"path":"https://jbetz-jhu.github.io/impart/reference/test_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"test_data: A dataset used for testing package functions — test_data","text":"","code":"test_data"},{"path":[]},{"path":"https://jbetz-jhu.github.io/impart/reference/test_data.html","id":"test-data","dir":"Reference","previous_headings":"","what":"test_data","title":"test_data: A dataset used for testing package functions — test_data","text":"data frame 10 rows 12 columns: .id Participant ID enrollment Entry time x_1 binary covariate tx Binary treatment assignment tte_1 time event_1 tte_2 time event_2 event_1 Event 1 indicator event_2 Event 2 indicator y_1 Intermediate outcome - 1 2 y_2 Final Outcome - 2 2 .t_1 Time intermediate outcome .t_2 Time final outcome","code":""}]
